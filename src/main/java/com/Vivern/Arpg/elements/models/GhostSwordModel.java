//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

public class GhostSwordModel extends ModelBase {
   public ModelRenderer staf;
   public ModelRenderer stone;
   public ModelRenderer shape;
   public ModelRenderer shape_1;
   public ModelRenderer shape_2;
   public ModelRenderer blade;
   public ModelRenderer blade_1;
   public ModelRenderer bladeaaa;
   public ModelRenderer bladeaaa_1;
   public ModelRenderer shape_3;
   public ModelRenderer bladebbb;
   public ModelRenderer shape_4;
   public ModelRenderer bladebbb_1;

   public GhostSwordModel() {
      this.textureWidth = 16;
      this.textureHeight = 32;
      this.stone = new ModelRenderer(this, 8, 4);
      this.stone.setRotationPoint(0.0F, 11.3F, 5.0F);
      this.stone.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 1, 0.0F);
      this.setRotateAngle(this.stone, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.blade_1 = new ModelRenderer(this, 8, 11);
      this.blade_1.setRotationPoint(0.0F, 5.0F, 5.0F);
      this.blade_1.addBox(-0.5F, -15.0F, -0.5F, 1, 6, 1, 0.0F);
      this.shape_1 = new ModelRenderer(this, 0, 14);
      this.shape_1.setRotationPoint(0.0F, 5.0F, 5.0F);
      this.shape_1.addBox(-1.0F, 0.0F, -2.0F, 2, 1, 4, 0.0F);
      this.shape_3 = new ModelRenderer(this, 8, 0);
      this.shape_3.setRotationPoint(0.0F, 3.7F, 5.0F);
      this.shape_3.addBox(-1.0F, 0.0F, -3.5F, 2, 3, 1, 0.0F);
      this.shape_2 = new ModelRenderer(this, 0, 11);
      this.shape_2.setRotationPoint(0.0F, 4.95F, 5.0F);
      this.shape_2.addBox(-1.0F, 0.0F, -1.0F, 2, 1, 2, 0.0F);
      this.shape_4 = new ModelRenderer(this, 8, 0);
      this.shape_4.setRotationPoint(0.0F, 3.7F, 5.0F);
      this.shape_4.addBox(-1.0F, 0.0F, 2.5F, 2, 3, 1, 0.0F);
      this.bladebbb = new ModelRenderer(this, 0, 14);
      this.bladebbb.setRotationPoint(0.0F, 2.0F, 5.0F);
      this.bladebbb.addBox(-0.5F, 0.0F, -3.8F, 1, 3, 1, 0.0F);
      this.bladebbb_1 = new ModelRenderer(this, 8, 7);
      this.bladebbb_1.setRotationPoint(0.0F, 2.0F, 5.0F);
      this.bladebbb_1.addBox(-0.5F, 0.0F, 2.8F, 1, 3, 1, 0.0F);
      this.shape = new ModelRenderer(this, 0, 8);
      this.shape.setRotationPoint(0.0F, 10.5F, 5.0F);
      this.shape.addBox(-1.0F, 0.0F, -1.0F, 2, 1, 2, 0.0F);
      this.bladeaaa_1 = new ModelRenderer(this, 12, 12);
      this.bladeaaa_1.mirror = true;
      this.bladeaaa_1.setRotationPoint(0.0F, 5.0F, 5.0F);
      this.bladeaaa_1.addBox(-0.5F, -19.0F, 0.75F, 1, 19, 1, 0.0F);
      this.staf = new ModelRenderer(this, 0, 0);
      this.staf.setRotationPoint(0.0F, 5.8F, 5.0F);
      this.staf.addBox(-1.0F, 0.0F, -1.0F, 2, 6, 2, 0.0F);
      this.bladeaaa = new ModelRenderer(this, 12, 12);
      this.bladeaaa.setRotationPoint(0.0F, 5.0F, 5.0F);
      this.bladeaaa.addBox(-0.5F, -19.0F, -1.75F, 1, 19, 1, 0.0F);
      this.blade = new ModelRenderer(this, 0, 21);
      this.blade.setRotationPoint(0.0F, 5.0F, 5.0F);
      this.blade.addBox(-0.5F, -8.0F, -1.5F, 1, 8, 3, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_1.offsetX, this.shape_1.offsetY, this.shape_1.offsetZ);
      GlStateManager.translate(this.shape_1.rotationPointX * f5, this.shape_1.rotationPointY * f5, this.shape_1.rotationPointZ * f5);
      GlStateManager.scale(0.3, 0.8, 0.8);
      GlStateManager.translate(-this.shape_1.offsetX, -this.shape_1.offsetY, -this.shape_1.offsetZ);
      GlStateManager.translate(-this.shape_1.rotationPointX * f5, -this.shape_1.rotationPointY * f5, -this.shape_1.rotationPointZ * f5);
      this.shape_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_3.offsetX, this.shape_3.offsetY, this.shape_3.offsetZ);
      GlStateManager.translate(this.shape_3.rotationPointX * f5, this.shape_3.rotationPointY * f5, this.shape_3.rotationPointZ * f5);
      GlStateManager.scale(0.4, 0.8, 0.6);
      GlStateManager.translate(-this.shape_3.offsetX, -this.shape_3.offsetY, -this.shape_3.offsetZ);
      GlStateManager.translate(-this.shape_3.rotationPointX * f5, -this.shape_3.rotationPointY * f5, -this.shape_3.rotationPointZ * f5);
      this.shape_3.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_2.offsetX, this.shape_2.offsetY, this.shape_2.offsetZ);
      GlStateManager.translate(this.shape_2.rotationPointX * f5, this.shape_2.rotationPointY * f5, this.shape_2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.9, 0.8);
      GlStateManager.translate(-this.shape_2.offsetX, -this.shape_2.offsetY, -this.shape_2.offsetZ);
      GlStateManager.translate(-this.shape_2.rotationPointX * f5, -this.shape_2.rotationPointY * f5, -this.shape_2.rotationPointZ * f5);
      this.shape_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_4.offsetX, this.shape_4.offsetY, this.shape_4.offsetZ);
      GlStateManager.translate(this.shape_4.rotationPointX * f5, this.shape_4.rotationPointY * f5, this.shape_4.rotationPointZ * f5);
      GlStateManager.scale(0.4, 0.8, 0.6);
      GlStateManager.translate(-this.shape_4.offsetX, -this.shape_4.offsetY, -this.shape_4.offsetZ);
      GlStateManager.translate(-this.shape_4.rotationPointX * f5, -this.shape_4.rotationPointY * f5, -this.shape_4.rotationPointZ * f5);
      this.shape_4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape.offsetX, this.shape.offsetY, this.shape.offsetZ);
      GlStateManager.translate(this.shape.rotationPointX * f5, this.shape.rotationPointY * f5, this.shape.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.8, 0.7);
      GlStateManager.translate(-this.shape.offsetX, -this.shape.offsetY, -this.shape.offsetZ);
      GlStateManager.translate(-this.shape.rotationPointX * f5, -this.shape.rotationPointY * f5, -this.shape.rotationPointZ * f5);
      this.shape.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.bladeaaa_1.offsetX, this.bladeaaa_1.offsetY, this.bladeaaa_1.offsetZ);
      GlStateManager.translate(this.bladeaaa_1.rotationPointX * f5, this.bladeaaa_1.rotationPointY * f5, this.bladeaaa_1.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.5, 0.4);
      GlStateManager.translate(-this.bladeaaa_1.offsetX, -this.bladeaaa_1.offsetY, -this.bladeaaa_1.offsetZ);
      GlStateManager.translate(-this.bladeaaa_1.rotationPointX * f5, -this.bladeaaa_1.rotationPointY * f5, -this.bladeaaa_1.rotationPointZ * f5);
      this.bladeaaa_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.staf.offsetX, this.staf.offsetY, this.staf.offsetZ);
      GlStateManager.translate(this.staf.rotationPointX * f5, this.staf.rotationPointY * f5, this.staf.rotationPointZ * f5);
      GlStateManager.scale(0.5, 0.8, 0.5);
      GlStateManager.translate(-this.staf.offsetX, -this.staf.offsetY, -this.staf.offsetZ);
      GlStateManager.translate(-this.staf.rotationPointX * f5, -this.staf.rotationPointY * f5, -this.staf.rotationPointZ * f5);
      this.staf.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.bladeaaa.offsetX, this.bladeaaa.offsetY, this.bladeaaa.offsetZ);
      GlStateManager.translate(this.bladeaaa.rotationPointX * f5, this.bladeaaa.rotationPointY * f5, this.bladeaaa.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.5, 0.4);
      GlStateManager.translate(-this.bladeaaa.offsetX, -this.bladeaaa.offsetY, -this.bladeaaa.offsetZ);
      GlStateManager.translate(-this.bladeaaa.rotationPointX * f5, -this.bladeaaa.rotationPointY * f5, -this.bladeaaa.rotationPointZ * f5);
      this.bladeaaa.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GL11.glDisable(2896);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 180.0F, 180.0F);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.stone.offsetX, this.stone.offsetY, this.stone.offsetZ);
      GlStateManager.translate(this.stone.rotationPointX * f5, this.stone.rotationPointY * f5, this.stone.rotationPointZ * f5);
      GlStateManager.scale(0.45, 0.5, 0.45);
      GlStateManager.translate(-this.stone.offsetX, -this.stone.offsetY, -this.stone.offsetZ);
      GlStateManager.translate(-this.stone.rotationPointX * f5, -this.stone.rotationPointY * f5, -this.stone.rotationPointZ * f5);
      this.stone.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.blade_1.offsetX, this.blade_1.offsetY, this.blade_1.offsetZ);
      GlStateManager.translate(this.blade_1.rotationPointX * f5, this.blade_1.rotationPointY * f5, this.blade_1.rotationPointZ * f5);
      GlStateManager.scale(0.3, 0.8, 0.7);
      GlStateManager.translate(-this.blade_1.offsetX, -this.blade_1.offsetY, -this.blade_1.offsetZ);
      GlStateManager.translate(-this.blade_1.rotationPointX * f5, -this.blade_1.rotationPointY * f5, -this.blade_1.rotationPointZ * f5);
      this.blade_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.bladebbb.offsetX, this.bladebbb.offsetY, this.bladebbb.offsetZ);
      GlStateManager.translate(this.bladebbb.rotationPointX * f5, this.bladebbb.rotationPointY * f5, this.bladebbb.rotationPointZ * f5);
      GlStateManager.scale(0.3, 1.0, 0.5);
      GlStateManager.translate(-this.bladebbb.offsetX, -this.bladebbb.offsetY, -this.bladebbb.offsetZ);
      GlStateManager.translate(-this.bladebbb.rotationPointX * f5, -this.bladebbb.rotationPointY * f5, -this.bladebbb.rotationPointZ * f5);
      this.bladebbb.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.bladebbb_1.offsetX, this.bladebbb_1.offsetY, this.bladebbb_1.offsetZ);
      GlStateManager.translate(this.bladebbb_1.rotationPointX * f5, this.bladebbb_1.rotationPointY * f5, this.bladebbb_1.rotationPointZ * f5);
      GlStateManager.scale(0.3, 1.0, 0.5);
      GlStateManager.translate(-this.bladebbb_1.offsetX, -this.bladebbb_1.offsetY, -this.bladebbb_1.offsetZ);
      GlStateManager.translate(-this.bladebbb_1.rotationPointX * f5, -this.bladebbb_1.rotationPointY * f5, -this.bladebbb_1.rotationPointZ * f5);
      this.bladebbb_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.blade.offsetX, this.blade.offsetY, this.blade.offsetZ);
      GlStateManager.translate(this.blade.rotationPointX * f5, this.blade.rotationPointY * f5, this.blade.rotationPointZ * f5);
      GlStateManager.scale(0.3, 0.9, 0.7);
      GlStateManager.translate(-this.blade.offsetX, -this.blade.offsetY, -this.blade.offsetZ);
      GlStateManager.translate(-this.blade.rotationPointX * f5, -this.blade.rotationPointY * f5, -this.blade.rotationPointZ * f5);
      this.blade.render(f5);
      GlStateManager.popMatrix();
      GL11.glEnable(2896);
      GlStateManager.popMatrix();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
