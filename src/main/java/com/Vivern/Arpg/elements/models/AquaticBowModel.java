//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.main.AnimationTimer;
import com.Vivern.Arpg.main.GetMOP;
import com.Vivern.Arpg.renders.ModelRendererGlow;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class AquaticBowModel extends ModelBase {
   public ModelRenderer shapeMAIN;
   public ModelRenderer shapeUP1;
   public ModelRenderer shapeDOWN1;
   public ModelRenderer shapeR1;
   public ModelRenderer shapeR2;
   public ModelRenderer shapeR3;
   public ModelRenderer shapeR4;
   public ModelRenderer shapefocus1;
   public ModelRenderer shapejaw1;
   public ModelRenderer shapejaw2;
   public ModelRenderer shapejaw3;
   public ModelRenderer shapejaw4;
   public ModelRenderer shapefocus2;
   public ModelRenderer shapeUP2;
   public ModelRenderer shapeUP4;
   public ModelRenderer ropeUP;
   public ModelRenderer shapeUP3a;
   public ModelRenderer sphereUP;
   public ModelRenderer shapeUP3b;
   public ModelRenderer shapeDOWN2;
   public ModelRenderer shapeDOWN4;
   public ModelRenderer ropeDOWN;
   public ModelRenderer shapeDOWN3a;
   public ModelRenderer sphereDOWN;
   public ModelRenderer shapeDOWN3b;

   public AquaticBowModel() {
      this.textureWidth = 20;
      this.textureHeight = 20;
      this.shapeMAIN = new ModelRenderer(this, 2, 0);
      this.shapeMAIN.setRotationPoint(0.0F, 3.5F, 5.0F);
      this.shapeMAIN.addBox(-1.0F, -4.0F, -1.1F, 2, 8, 2, 0.0F);
      this.shapeUP4 = new ModelRenderer(this, 2, 6);
      this.shapeUP4.setRotationPoint(0.0F, -1.0F, -0.5F);
      this.shapeUP4.addBox(0.0F, -9.0F, -4.0F, 0, 9, 4, 0.0F);
      this.setRotateAngle(this.shapeUP4, -0.22759093F, 0.0F, 0.0F);
      this.shapeUP1 = new ModelRenderer(this, 10, 11);
      this.shapeUP1.setRotationPoint(0.0F, -0.2F, 5.0F);
      this.shapeUP1.addBox(-0.5F, -6.0F, -0.5F, 1, 6, 1, 0.05F);
      this.setRotateAngle(this.shapeUP1, -0.091106184F, 0.0F, 0.0F);
      this.shapeUP3a = new ModelRenderer(this, 14, 1);
      this.shapeUP3a.setRotationPoint(0.05F, -5.0F, 0.5F);
      this.shapeUP3a.addBox(0.0F, -5.5F, -0.5F, 0, 8, 3, 0.0F);
      this.setRotateAngle(this.shapeUP3a, 0.8196066F, 0.31869712F, 0.18203785F);
      this.shapeR4 = new ModelRenderer(this, 10, 4);
      this.shapeR4.setRotationPoint(0.0F, 3.5F, 4.0F);
      this.shapeR4.addBox(-0.5F, 0.0F, -2.9F, 1, 5, 2, 0.0F);
      this.setRotateAngle(this.shapeR4, 1.7301449F, 0.0F, (float) (-Math.PI * 3.0 / 4.0));
      this.shapeDOWN3b = new ModelRenderer(this, 14, 1);
      this.shapeDOWN3b.setRotationPoint(-0.05F, -5.0F, 0.5F);
      this.shapeDOWN3b.addBox(0.0F, -5.5F, -0.5F, 0, 8, 3, 0.0F);
      this.setRotateAngle(this.shapeDOWN3b, 0.8196066F, -0.31869712F, -0.18203785F);
      this.shapeDOWN2 = new ModelRenderer(this, 16, 12);
      this.shapeDOWN2.setRotationPoint(0.0F, -6.0F, -0.5F);
      this.shapeDOWN2.addBox(-0.5F, -5.0F, 0.0F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.shapeDOWN2, -0.8196066F, 0.0F, 0.0F);
      this.shapeR1 = new ModelRenderer(this, 10, 4);
      this.shapeR1.setRotationPoint(0.0F, 3.5F, 4.0F);
      this.shapeR1.addBox(-0.5F, 0.0F, -2.9F, 1, 5, 2, 0.0F);
      this.setRotateAngle(this.shapeR1, 1.7301449F, 0.0F, (float) (Math.PI / 4));
      this.shapeUP2 = new ModelRenderer(this, 16, 12);
      this.shapeUP2.setRotationPoint(0.0F, -6.0F, -0.5F);
      this.shapeUP2.addBox(-0.5F, -5.0F, 0.0F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.shapeUP2, -0.8196066F, 0.0F, 0.0F);
      this.shapeDOWN4 = new ModelRenderer(this, 2, 6);
      this.shapeDOWN4.setRotationPoint(0.0F, -1.0F, -0.5F);
      this.shapeDOWN4.addBox(0.0F, -9.0F, -4.0F, 0, 9, 4, 0.0F);
      this.setRotateAngle(this.shapeDOWN4, -0.22759093F, 0.0F, 0.0F);
      this.shapejaw1 = new ModelRenderer(this, 12, 16);
      this.shapejaw1.setRotationPoint(0.0F, 0.0F, -1.0F);
      this.shapejaw1.addBox(-0.5F, -2.3F, -2.0F, 1, 2, 2, 0.0F);
      this.setRotateAngle(this.shapejaw1, 0.0F, 0.0F, (float) (-Math.PI / 4));
      this.sphereUP = new ModelRendererGlow(this, 0, 0, 100, true);
      this.sphereUP.setRotationPoint(0.0F, -7.0F, 0.5F);
      this.sphereUP.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 1, 0.0F);
      this.setRotateAngle(this.sphereUP, 1.2747885F, 0.91053826F, 0.3642502F);
      this.shapejaw3 = new ModelRenderer(this, 12, 16);
      this.shapejaw3.setRotationPoint(0.0F, 0.0F, -1.0F);
      this.shapejaw3.addBox(-0.5F, -2.3F, -2.0F, 1, 2, 2, 0.0F);
      this.setRotateAngle(this.shapejaw3, 0.0F, 0.0F, (float) (Math.PI * 3.0 / 4.0));
      this.shapeUP3b = new ModelRenderer(this, 14, 1);
      this.shapeUP3b.setRotationPoint(-0.05F, -5.0F, 0.5F);
      this.shapeUP3b.addBox(0.0F, -5.5F, -0.5F, 0, 8, 3, 0.0F);
      this.setRotateAngle(this.shapeUP3b, 0.8196066F, -0.31869712F, -0.18203785F);
      this.shapejaw2 = new ModelRenderer(this, 12, 16);
      this.shapejaw2.setRotationPoint(0.0F, 0.0F, -1.0F);
      this.shapejaw2.addBox(-0.5F, -2.3F, -2.0F, 1, 2, 2, 0.0F);
      this.setRotateAngle(this.shapejaw2, 0.0F, 0.0F, (float) (Math.PI / 4));
      this.shapeDOWN3a = new ModelRenderer(this, 14, 1);
      this.shapeDOWN3a.setRotationPoint(0.05F, -5.0F, 0.5F);
      this.shapeDOWN3a.addBox(0.0F, -5.5F, -0.5F, 0, 8, 3, 0.0F);
      this.setRotateAngle(this.shapeDOWN3a, 0.8196066F, 0.31869712F, 0.18203785F);
      this.shapejaw4 = new ModelRenderer(this, 12, 16);
      this.shapejaw4.setRotationPoint(0.0F, 0.0F, -1.0F);
      this.shapejaw4.addBox(-0.5F, -2.3F, -2.0F, 1, 2, 2, 0.0F);
      this.setRotateAngle(this.shapejaw4, 0.0F, 0.0F, (float) (-Math.PI * 3.0 / 4.0));
      this.sphereDOWN = new ModelRendererGlow(this, 0, 0, 100, true);
      this.sphereDOWN.setRotationPoint(0.0F, -7.0F, 0.5F);
      this.sphereDOWN.addBox(-0.5F, -0.5F, -0.5F, 1, 1, 1, 0.0F);
      this.setRotateAngle(this.sphereDOWN, 1.2747885F, 0.91053826F, 0.3642502F);
      this.shapefocus1 = new ModelRenderer(this, 10, -4);
      this.shapefocus1.setRotationPoint(0.0F, -3.0F, -1.0F);
      this.shapefocus1.addBox(0.01F, -4.0F, -4.0F, 0, 4, 4, 0.0F);
      this.shapeDOWN1 = new ModelRenderer(this, 10, 11);
      this.shapeDOWN1.setRotationPoint(0.0F, 7.2F, 5.0F);
      this.shapeDOWN1.addBox(-0.5F, -6.0F, -0.5F, 1, 6, 1, 0.05F);
      this.setRotateAngle(this.shapeDOWN1, -0.091106184F, 0.0F, (float) Math.PI);
      this.shapefocus2 = new ModelRenderer(this, 10, -4);
      this.shapefocus2.setRotationPoint(0.0F, 3.0F, -1.0F);
      this.shapefocus2.addBox(0.01F, -4.0F, -4.0F, 0, 4, 4, 0.0F);
      this.setRotateAngle(this.shapefocus2, 0.0F, 0.0F, (float) Math.PI);
      this.shapeR2 = new ModelRenderer(this, 10, 4);
      this.shapeR2.setRotationPoint(0.0F, 3.5F, 4.0F);
      this.shapeR2.addBox(-0.5F, 0.0F, -2.9F, 1, 5, 2, 0.0F);
      this.setRotateAngle(this.shapeR2, 1.7301449F, 0.0F, (float) (-Math.PI / 4));
      this.shapeR3 = new ModelRenderer(this, 10, 4);
      this.shapeR3.setRotationPoint(0.0F, 3.5F, 4.0F);
      this.shapeR3.addBox(-0.5F, 0.0F, -2.9F, 1, 5, 2, 0.0F);
      this.setRotateAngle(this.shapeR3, 1.7301449F, 0.0F, (float) (Math.PI * 3.0 / 4.0));
      this.ropeDOWN = new ModelRendererGlow(this, 0, 1, 80, true);
      this.ropeDOWN.setRotationPoint(0.0F, -7.0F, 0.5F);
      this.ropeDOWN.addBox(0.0F, 0.0F, -0.5F, 0, 15, 1, 0.0F);
      this.setRotateAngle(this.ropeDOWN, 0.91053826F, 0.0F, 0.0F);
      this.ropeUP = new ModelRendererGlow(this, 0, 1, 80, true);
      this.ropeUP.setRotationPoint(0.0F, -7.0F, 0.5F);
      this.ropeUP.addBox(0.0F, 0.0F, -0.5F, 0, 15, 1, 0.0F);
      this.setRotateAngle(this.ropeUP, 0.91053826F, 0.0F, 0.0F);
      this.shapeUP1.addChild(this.shapeUP4);
      this.shapeUP2.addChild(this.shapeUP3a);
      this.shapeDOWN2.addChild(this.shapeDOWN3b);
      this.shapeDOWN1.addChild(this.shapeDOWN2);
      this.shapeUP1.addChild(this.shapeUP2);
      this.shapeDOWN1.addChild(this.shapeDOWN4);
      this.shapeMAIN.addChild(this.shapejaw1);
      this.shapeUP2.addChild(this.sphereUP);
      this.shapeMAIN.addChild(this.shapejaw3);
      this.shapeUP2.addChild(this.shapeUP3b);
      this.shapeMAIN.addChild(this.shapejaw2);
      this.shapeDOWN2.addChild(this.shapeDOWN3a);
      this.shapeMAIN.addChild(this.shapejaw4);
      this.shapeDOWN2.addChild(this.sphereDOWN);
      this.shapeMAIN.addChild(this.shapefocus1);
      this.shapeMAIN.addChild(this.shapefocus2);
      this.shapeDOWN2.addChild(this.ropeDOWN);
      this.shapeUP2.addChild(this.ropeUP);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.disableCull();
      boolean ench = f1 > 0.0F;
      this.shapeUP4.isHidden = ench;
      this.shapeDOWN4.isHidden = ench;
      this.shapefocus1.isHidden = ench;
      this.shapefocus2.isHidden = ench;
      this.shapeR1.isHidden = ench;
      this.shapeR2.isHidden = ench;
      this.shapeR3.isHidden = ench;
      this.shapeR4.isHidden = ench;
      this.shapeUP3a.isHidden = ench;
      this.shapeUP3b.isHidden = ench;
      this.shapeDOWN3a.isHidden = ench;
      this.shapeDOWN3b.isHidden = ench;
      this.ropeDOWN.isHidden = ench;
      this.ropeUP.isHidden = ench;
      float r1 = AnimationTimer.rainbow1;
      float r2 = AnimationTimer.rainbow2;
      int tick = AnimationTimer.tick;
      this.setRotateAngle(this.sphereUP, r1 * 0.17F, tick * 0.057F, r2 * 0.05F);
      this.setRotateAngle(this.sphereDOWN, r1 * 0.18F, tick * 0.054F, r2 * 0.051321F);
      this.shapeUP1.rotateAngleX = GetMOP.partial(-0.36425F, -0.091106184F, f);
      this.shapeUP2.rotateAngleX = GetMOP.partial(-0.546288F, -0.8196066F, f);
      this.shapeDOWN1.rotateAngleX = this.shapeUP1.rotateAngleX;
      this.shapeDOWN2.rotateAngleX = this.shapeUP2.rotateAngleX;
      float progressSpec = f * f2;
      float ft0 = GetMOP.getfromto(progressSpec, 0.9F, 1.0F);
      float ft1 = GetMOP.getfromto(progressSpec, 0.1F, 0.6F) * ((float) Math.PI * 5.0F / 4.0F) - ft0 * 0.785398F;
      float ft2 = GetMOP.getfromto(progressSpec, 0.6F, 0.7F) * -0.54F;
      this.setRotateAngle(this.shapejaw1, ft2, 0.0F, (float) (-Math.PI / 4) + ft1);
      this.setRotateAngle(this.shapejaw2, ft2, 0.0F, (float) (Math.PI / 4) + ft1);
      this.setRotateAngle(this.shapejaw3, ft2, 0.0F, (float) (Math.PI * 3.0 / 4.0) + ft1);
      this.setRotateAngle(this.shapejaw4, ft2, 0.0F, (float) (-Math.PI * 3.0 / 4.0) + ft1);
      if (!ench) {
         this.ropeUP.rotateAngleX = GetMOP.partial(1.343904F, 0.91053826F, f);
         this.ropeDOWN.rotateAngleX = this.ropeUP.rotateAngleX;
         this.shapeR1.rotateAngleX = GetMOP.partial(1.97F, 1.7301449F, f);
         this.shapeR2.rotateAngleX = this.shapeR1.rotateAngleX;
         this.shapeR3.rotateAngleX = this.shapeR1.rotateAngleX;
         this.shapeR4.rotateAngleX = this.shapeR1.rotateAngleX;
         float ft3 = GetMOP.getfromto(progressSpec, 0.67F, 0.84F) * 0.62F;
         this.shapefocus1.rotateAngleX = ft3;
         this.shapefocus2.rotateAngleX = ft3;
         float ft4 = GetMOP.getfromto(progressSpec, 0.8F, 0.9F) * -0.1F;
         this.shapeUP4.rotateAngleX = -0.22759093F + ft4;
         this.shapeDOWN4.rotateAngleX = -0.22759093F + ft4;
         float ft5 = GetMOP.getfromto(progressSpec, 0.34F, 0.5F) * 0.261799F;
         this.shapeR1.rotateAngleZ = (float) (Math.PI / 4) - ft5;
         this.shapeR2.rotateAngleZ = (float) (-Math.PI / 4) + ft5;
         this.shapeR3.rotateAngleZ = (float) (Math.PI * 3.0 / 4.0) + ft5;
         this.shapeR4.rotateAngleZ = (float) (-Math.PI * 3.0 / 4.0) - ft5;
      }

      this.shapeMAIN.render(f5);
      this.shapeUP1.render(f5);
      this.shapeDOWN1.render(f5);
      AbstractMobModel.light(80 + (int)(50.0F * ft0), true);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeR4.offsetX, this.shapeR4.offsetY, this.shapeR4.offsetZ);
      GlStateManager.translate(this.shapeR4.rotationPointX * f5, this.shapeR4.rotationPointY * f5, this.shapeR4.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.2);
      GlStateManager.translate(-this.shapeR4.offsetX, -this.shapeR4.offsetY, -this.shapeR4.offsetZ);
      GlStateManager.translate(-this.shapeR4.rotationPointX * f5, -this.shapeR4.rotationPointY * f5, -this.shapeR4.rotationPointZ * f5);
      this.shapeR4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeR1.offsetX, this.shapeR1.offsetY, this.shapeR1.offsetZ);
      GlStateManager.translate(this.shapeR1.rotationPointX * f5, this.shapeR1.rotationPointY * f5, this.shapeR1.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.2);
      GlStateManager.translate(-this.shapeR1.offsetX, -this.shapeR1.offsetY, -this.shapeR1.offsetZ);
      GlStateManager.translate(-this.shapeR1.rotationPointX * f5, -this.shapeR1.rotationPointY * f5, -this.shapeR1.rotationPointZ * f5);
      this.shapeR1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeR2.offsetX, this.shapeR2.offsetY, this.shapeR2.offsetZ);
      GlStateManager.translate(this.shapeR2.rotationPointX * f5, this.shapeR2.rotationPointY * f5, this.shapeR2.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.2);
      GlStateManager.translate(-this.shapeR2.offsetX, -this.shapeR2.offsetY, -this.shapeR2.offsetZ);
      GlStateManager.translate(-this.shapeR2.rotationPointX * f5, -this.shapeR2.rotationPointY * f5, -this.shapeR2.rotationPointZ * f5);
      this.shapeR2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeR3.offsetX, this.shapeR3.offsetY, this.shapeR3.offsetZ);
      GlStateManager.translate(this.shapeR3.rotationPointX * f5, this.shapeR3.rotationPointY * f5, this.shapeR3.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.2);
      GlStateManager.translate(-this.shapeR3.offsetX, -this.shapeR3.offsetY, -this.shapeR3.offsetZ);
      GlStateManager.translate(-this.shapeR3.rotationPointX * f5, -this.shapeR3.rotationPointY * f5, -this.shapeR3.rotationPointZ * f5);
      this.shapeR3.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.enableCull();
      AbstractMobModel.returnlight();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
