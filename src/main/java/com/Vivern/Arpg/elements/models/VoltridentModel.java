//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class VoltridentModel extends ModelBase {
   public ModelRenderer staf1;
   public ModelRenderer staf1_1;
   public ModelRenderer staf1_2;
   public ModelRenderer shapeCenter;
   public ModelRenderer shape;
   public ModelRenderer shape_1;
   public ModelRenderer shape_2;
   public ModelRenderer shape_3;
   public ModelRenderer shape_4;
   public ModelRenderer shape_5;
   public ModelRenderer shapeTip;
   public ModelRenderer shapeTip_1;
   public ModelRenderer shapeTipC;
   public ModelRenderer gem;

   public VoltridentModel() {
      this.textureWidth = 16;
      this.textureHeight = 32;
      this.staf1_1 = new ModelRenderer(this, 0, 16);
      this.staf1_1.setRotationPoint(0.0F, 8.4F, 5.0F);
      this.staf1_1.addBox(-1.0F, 0.0F, -1.0F, 2, 8, 2, 0.0F);
      this.gem = new ModelRenderer(this, 8, 22);
      this.gem.setRotationPoint(0.0F, -5.0F, 5.0F);
      this.gem.addBox(-0.5F, -0.5F, -1.5F, 1, 1, 3, 0.0F);
      this.setRotateAngle(this.gem, 0.0F, 0.0F, (float) (Math.PI / 4));
      this.shape_1 = new ModelRenderer(this, 8, 0);
      this.shape_1.mirror = true;
      this.shape_1.setRotationPoint(0.0F, -6.0F, 5.0F);
      this.shape_1.addBox(-4.0F, -2.0F, -1.0F, 1, 3, 2, 0.0F);
      this.shapeTip = new ModelRenderer(this, 8, 20);
      this.shapeTip.setRotationPoint(3.1F, -11.1F, 5.0F);
      this.shapeTip.addBox(-1.0F, -1.0F, -0.5F, 2, 1, 1, 0.0F);
      this.setRotateAngle(this.shapeTip, 0.0F, 0.0F, 0.7740535F);
      this.shapeTip_1 = new ModelRenderer(this, 8, 20);
      this.shapeTip_1.mirror = true;
      this.shapeTip_1.setRotationPoint(-3.1F, -11.1F, 5.0F);
      this.shapeTip_1.addBox(-1.0F, -1.0F, -0.5F, 2, 1, 1, 0.0F);
      this.setRotateAngle(this.shapeTip_1, 0.0F, 0.0F, -0.7740535F);
      this.shape_5 = new ModelRenderer(this, 8, 15);
      this.shape_5.setRotationPoint(0.0F, -9.0F, 5.0F);
      this.shape_5.addBox(-0.5F, -4.0F, -0.5F, 1, 4, 1, 0.0F);
      this.staf1 = new ModelRenderer(this, 0, 0);
      this.staf1.setRotationPoint(0.0F, -4.0F, 5.0F);
      this.staf1.addBox(-1.0F, 0.0F, -1.0F, 2, 14, 2, 0.0F);
      this.shapeCenter = new ModelRenderer(this, 0, 26);
      this.shapeCenter.setRotationPoint(0.0F, -6.0F, 5.0F);
      this.shapeCenter.addBox(-3.0F, 0.0F, -1.0F, 6, 2, 2, 0.0F);
      this.shape_3 = new ModelRenderer(this, 8, 5);
      this.shape_3.mirror = true;
      this.shape_3.setRotationPoint(-3.0F, -8.0F, 5.0F);
      this.shape_3.addBox(-0.5F, -4.0F, -0.5F, 1, 4, 1, 0.0F);
      this.staf1_2 = new ModelRenderer(this, 0, 0);
      this.staf1_2.setRotationPoint(0.0F, 15.5F, 5.0F);
      this.staf1_2.addBox(-1.0F, 0.0F, -1.0F, 2, 9, 2, 0.0F);
      this.shapeTipC = new ModelRenderer(this, 12, 15);
      this.shapeTipC.setRotationPoint(0.0F, -12.1F, 5.0F);
      this.shapeTipC.addBox(0.0F, -1.0F, -0.5F, 1, 1, 1, 0.0F);
      this.setRotateAngle(this.shapeTipC, 0.0F, 0.0F, (float) (-Math.PI / 4));
      this.shape_4 = new ModelRenderer(this, 8, 10);
      this.shape_4.setRotationPoint(0.0F, -6.0F, 5.0F);
      this.shape_4.addBox(-0.5F, -3.0F, -1.0F, 1, 3, 2, 0.0F);
      this.shape = new ModelRenderer(this, 8, 0);
      this.shape.setRotationPoint(0.0F, -6.0F, 5.0F);
      this.shape.addBox(3.0F, -2.0F, -1.0F, 1, 3, 2, 0.0F);
      this.shape_2 = new ModelRenderer(this, 8, 5);
      this.shape_2.setRotationPoint(3.0F, -8.0F, 5.0F);
      this.shape_2.addBox(-0.5F, -4.0F, -0.5F, 1, 4, 1, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.staf1_1.offsetX, this.staf1_1.offsetY, this.staf1_1.offsetZ);
      GlStateManager.translate(this.staf1_1.rotationPointX * f5, this.staf1_1.rotationPointY * f5, this.staf1_1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.9, 1.0);
      GlStateManager.translate(-this.staf1_1.offsetX, -this.staf1_1.offsetY, -this.staf1_1.offsetZ);
      GlStateManager.translate(-this.staf1_1.rotationPointX * f5, -this.staf1_1.rotationPointY * f5, -this.staf1_1.rotationPointZ * f5);
      this.staf1_1.render(f5);
      GlStateManager.popMatrix();
      AbstractMobModel.light(140, true);
      this.gem.render(f5);
      AbstractMobModel.returnlight();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_1.offsetX, this.shape_1.offsetY, this.shape_1.offsetZ);
      GlStateManager.translate(this.shape_1.rotationPointX * f5, this.shape_1.rotationPointY * f5, this.shape_1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.0, 0.75);
      GlStateManager.translate(-this.shape_1.offsetX, -this.shape_1.offsetY, -this.shape_1.offsetZ);
      GlStateManager.translate(-this.shape_1.rotationPointX * f5, -this.shape_1.rotationPointY * f5, -this.shape_1.rotationPointZ * f5);
      this.shape_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeTip.offsetX, this.shapeTip.offsetY, this.shapeTip.offsetZ);
      GlStateManager.translate(this.shapeTip.rotationPointX * f5, this.shapeTip.rotationPointY * f5, this.shapeTip.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.2, 1.1);
      GlStateManager.translate(-this.shapeTip.offsetX, -this.shapeTip.offsetY, -this.shapeTip.offsetZ);
      GlStateManager.translate(-this.shapeTip.rotationPointX * f5, -this.shapeTip.rotationPointY * f5, -this.shapeTip.rotationPointZ * f5);
      this.shapeTip.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeTip_1.offsetX, this.shapeTip_1.offsetY, this.shapeTip_1.offsetZ);
      GlStateManager.translate(this.shapeTip_1.rotationPointX * f5, this.shapeTip_1.rotationPointY * f5, this.shapeTip_1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.2, 1.1);
      GlStateManager.translate(-this.shapeTip_1.offsetX, -this.shapeTip_1.offsetY, -this.shapeTip_1.offsetZ);
      GlStateManager.translate(-this.shapeTip_1.rotationPointX * f5, -this.shapeTip_1.rotationPointY * f5, -this.shapeTip_1.rotationPointZ * f5);
      this.shapeTip_1.render(f5);
      GlStateManager.popMatrix();
      this.shape_5.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.staf1.offsetX, this.staf1.offsetY, this.staf1.offsetZ);
      GlStateManager.translate(this.staf1.rotationPointX * f5, this.staf1.rotationPointY * f5, this.staf1.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.9, 0.8);
      GlStateManager.translate(-this.staf1.offsetX, -this.staf1.offsetY, -this.staf1.offsetZ);
      GlStateManager.translate(-this.staf1.rotationPointX * f5, -this.staf1.rotationPointY * f5, -this.staf1.rotationPointZ * f5);
      this.staf1.render(f5);
      GlStateManager.popMatrix();
      this.shapeCenter.render(f5);
      this.shape_3.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.staf1_2.offsetX, this.staf1_2.offsetY, this.staf1_2.offsetZ);
      GlStateManager.translate(this.staf1_2.rotationPointX * f5, this.staf1_2.rotationPointY * f5, this.staf1_2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.9, 0.8);
      GlStateManager.translate(-this.staf1_2.offsetX, -this.staf1_2.offsetY, -this.staf1_2.offsetZ);
      GlStateManager.translate(-this.staf1_2.rotationPointX * f5, -this.staf1_2.rotationPointY * f5, -this.staf1_2.rotationPointZ * f5);
      this.staf1_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeTipC.offsetX, this.shapeTipC.offsetY, this.shapeTipC.offsetZ);
      GlStateManager.translate(this.shapeTipC.rotationPointX * f5, this.shapeTipC.rotationPointY * f5, this.shapeTipC.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.2, 1.1);
      GlStateManager.translate(-this.shapeTipC.offsetX, -this.shapeTipC.offsetY, -this.shapeTipC.offsetZ);
      GlStateManager.translate(-this.shapeTipC.rotationPointX * f5, -this.shapeTipC.rotationPointY * f5, -this.shapeTipC.rotationPointZ * f5);
      this.shapeTipC.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape_4.offsetX, this.shape_4.offsetY, this.shape_4.offsetZ);
      GlStateManager.translate(this.shape_4.rotationPointX * f5, this.shape_4.rotationPointY * f5, this.shape_4.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.0, 0.75);
      GlStateManager.translate(-this.shape_4.offsetX, -this.shape_4.offsetY, -this.shape_4.offsetZ);
      GlStateManager.translate(-this.shape_4.rotationPointX * f5, -this.shape_4.rotationPointY * f5, -this.shape_4.rotationPointZ * f5);
      this.shape_4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape.offsetX, this.shape.offsetY, this.shape.offsetZ);
      GlStateManager.translate(this.shape.rotationPointX * f5, this.shape.rotationPointY * f5, this.shape.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.0, 0.75);
      GlStateManager.translate(-this.shape.offsetX, -this.shape.offsetY, -this.shape.offsetZ);
      GlStateManager.translate(-this.shape.rotationPointX * f5, -this.shape.rotationPointY * f5, -this.shape.rotationPointZ * f5);
      this.shape.render(f5);
      GlStateManager.popMatrix();
      this.shape_2.render(f5);
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
