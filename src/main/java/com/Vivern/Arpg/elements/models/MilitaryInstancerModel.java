//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.main.AnimationTimer;
import com.Vivern.Arpg.main.GetMOP;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class MilitaryInstancerModel extends ModelBase {
   public ModelRenderer shape1;
   public ModelRenderer shapefr3;
   public ModelRenderer shapefr2;
   public ModelRenderer shapefr1;
   public ModelRenderer shapefr4;
   public ModelRenderer shape2;
   public ModelRenderer shapeR1;
   public ModelRenderer shapess4;
   public ModelRenderer shapeR2;
   public ModelRenderer shapeR3;
   public ModelRenderer shape3;
   public ModelRenderer shape5;
   public ModelRenderer crystal;
   public ModelRenderer spawner;
   public ModelRenderer portal1;
   public ModelRenderer portal2;
   public ModelRenderer portal3;
   public ModelRenderer shapess1;
   public ModelRenderer shapess2;
   public ModelRenderer shapess3;
   public ModelRenderer portal4;
   public ModelRenderer light1;
   public ModelRenderer light2;
   public ModelRenderer vent1;
   public ModelRenderer vent2;
   public ModelRenderer light3;
   public ModelRenderer spawnerR1;
   public ModelRenderer shapess5;
   public ModelRenderer spawnerR2;
   public ModelRenderer shapeR4;
   public ModelRenderer spawnerR3;
   public ModelRenderer shape4;

   public MilitaryInstancerModel() {
      this.textureWidth = 64;
      this.textureHeight = 32;
      this.shapefr2 = new ModelRenderer(this, 48, 29);
      this.shapefr2.setRotationPoint(-2.5F, 8.0F, 0.5F);
      this.shapefr2.addBox(0.0F, 0.0F, 0.0F, 5, 2, 1, 0.0F);
      this.shapeR2 = new ModelRenderer(this, 39, 14);
      this.shapeR2.mirror = true;
      this.shapeR2.setRotationPoint(-2.0F, 11.0F, -3.0F);
      this.shapeR2.addBox(-3.0F, 0.0F, -5.0F, 3, 1, 9, 0.0F);
      this.spawner = new ModelRenderer(this, 0, 16);
      this.spawner.setRotationPoint(0.0F, 13.0F, -7.0F);
      this.spawner.addBox(-4.0F, -4.0F, -4.0F, 8, 8, 8, 0.0F);
      this.spawnerR3 = new ModelRenderer(this, 24, 15);
      this.spawnerR3.setRotationPoint(0.0F, -4.0F, 0.0F);
      this.spawnerR3.addBox(-4.0F, 0.0F, -4.0F, 8, 4, 4, 0.0F);
      this.shapefr1 = new ModelRenderer(this, 48, 29);
      this.shapefr1.setRotationPoint(-2.5F, 8.0F, -1.0F);
      this.shapefr1.addBox(0.0F, 0.0F, 0.0F, 5, 2, 1, 0.0F);
      this.shapeR3 = new ModelRenderer(this, 36, 10);
      this.shapeR3.setRotationPoint(0.0F, 18.0F, -1.3F);
      this.shapeR3.addBox(-1.0F, 0.0F, -4.7F, 2, 1, 4, 0.0F);
      this.spawnerR1 = new ModelRenderer(this, 32, 24);
      this.spawnerR1.setRotationPoint(-2.0F, 2.0F, -4.0F);
      this.spawnerR1.addBox(0.0F, -4.0F, -4.0F, 4, 4, 4, 0.0F);
      this.shapess1 = new ModelRenderer(this, 52, 0);
      this.shapess1.setRotationPoint(0.0F, 2.0F, 3.3F);
      this.shapess1.addBox(-0.5F, -0.7F, -2.0F, 1, 1, 3, 0.0F);
      this.setRotateAngle(this.shapess1, 0.68294734F, 0.0F, 0.0F);
      this.shape5 = new ModelRenderer(this, 0, 0);
      this.shape5.setRotationPoint(-1.5F, 9.5F, 6.0F);
      this.shape5.addBox(0.0F, 0.0F, 0.0F, 3, 2, 2, 0.0F);
      this.shapefr4 = new ModelRenderer(this, 48, 29);
      this.shapefr4.setRotationPoint(-2.5F, 8.0F, 3.5F);
      this.shapefr4.addBox(0.0F, 0.0F, 0.0F, 5, 2, 1, 0.0F);
      this.shape1 = new ModelRenderer(this, 0, 4);
      this.shape1.setRotationPoint(-2.0F, 9.0F, -3.0F);
      this.shape1.addBox(0.0F, 0.0F, 0.0F, 4, 3, 9, 0.0F);
      this.crystal = new ModelRenderer(this, 0, 9);
      this.crystal.setRotationPoint(0.0F, 10.4F, 9.2F);
      this.crystal.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
      this.setRotateAngle(this.crystal, 0.8196066F, 0.59184116F, 0.5462881F);
      this.light3 = new ModelRenderer(this, 20, 7);
      this.light3.setRotationPoint(-2.5F, 6.5F, -10.05F);
      this.light3.addBox(0.0F, 0.0F, 0.0F, 1, 1, 0, 0.0F);
      this.portal2 = new ModelRenderer(this, 54, 14);
      this.portal2.setRotationPoint(0.0F, 13.0F, -7.5F);
      this.portal2.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 0, 0.0F);
      this.shapess2 = new ModelRenderer(this, 31, 0);
      this.shapess2.setRotationPoint(0.0F, 2.0F, 3.3F);
      this.shapess2.addBox(-0.5F, 0.3F, -1.0F, 1, 6, 2, 0.0F);
      this.setRotateAngle(this.shapess2, 0.68294734F, 0.0F, 0.0F);
      this.shapess4 = new ModelRenderer(this, 44, 24);
      this.shapess4.setRotationPoint(2.0F, 10.0F, -2.0F);
      this.shapess4.addBox(0.0F, -1.0F, -1.0F, 8, 2, 2, 0.0F);
      this.light2 = new ModelRenderer(this, 0, 4);
      this.light2.setRotationPoint(-2.0F, 7.0F, -13.0F);
      this.light2.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
      this.setRotateAngle(this.light2, 0.7740535F, -0.59184116F, 0.0F);
      this.shapess3 = new ModelRenderer(this, 44, 0);
      this.shapess3.setRotationPoint(0.0F, 2.0F, 3.3F);
      this.shapess3.addBox(-0.5F, 4.25F, -5.05F, 1, 2, 6, 0.0F);
      this.setRotateAngle(this.shapess3, 0.68294734F, 0.0F, 0.0F);
      this.shape2 = new ModelRenderer(this, 30, 0);
      this.shape2.setRotationPoint(-1.5F, 7.0F, -9.0F);
      this.shape2.addBox(0.0F, 0.0F, 0.0F, 3, 2, 8, 0.0F);
      this.portal3 = new ModelRenderer(this, 54, 14);
      this.portal3.setRotationPoint(0.0F, 13.0F, -6.5F);
      this.portal3.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 0, 0.0F);
      this.vent2 = new ModelRenderer(this, 41, 0);
      this.vent2.setRotationPoint(0.0F, 6.75F, -5.0F);
      this.vent2.addBox(-1.5F, 0.0F, -1.5F, 3, 0, 3, 0.0F);
      this.portal1 = new ModelRenderer(this, 54, 14);
      this.portal1.setRotationPoint(0.0F, 13.0F, -8.5F);
      this.portal1.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 0, 0.0F);
      this.portal4 = new ModelRenderer(this, 54, 14);
      this.portal4.setRotationPoint(0.0F, 13.0F, -5.5F);
      this.portal4.addBox(-2.5F, -2.5F, 0.0F, 5, 5, 0, 0.0F);
      this.shape4 = new ModelRenderer(this, 49, 8);
      this.shape4.setRotationPoint(0.0F, 2.0F, -1.5F);
      this.shape4.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
      this.shapefr3 = new ModelRenderer(this, 48, 29);
      this.shapefr3.setRotationPoint(-2.5F, 8.0F, 2.0F);
      this.shapefr3.addBox(0.0F, 0.0F, 0.0F, 5, 2, 1, 0.0F);
      this.shapeR1 = new ModelRenderer(this, 39, 14);
      this.shapeR1.setRotationPoint(2.0F, 11.0F, -3.0F);
      this.shapeR1.addBox(0.0F, 0.0F, -5.0F, 3, 1, 9, 0.0F);
      this.spawnerR2 = new ModelRenderer(this, 32, 24);
      this.spawnerR2.mirror = true;
      this.spawnerR2.setRotationPoint(2.0F, 2.0F, -4.0F);
      this.spawnerR2.addBox(-4.0F, -4.0F, -4.0F, 4, 4, 4, 0.0F);
      this.shape3 = new ModelRenderer(this, 17, 2);
      this.shape3.setRotationPoint(0.0F, 15.7F, -1.5F);
      this.shape3.addBox(-1.0F, 1.0F, 0.0F, 2, 2, 9, 0.0F);
      this.setRotateAngle(this.shape3, 0.7285004F, 0.0F, 0.0F);
      this.light1 = new ModelRenderer(this, 17, 4);
      this.light1.setRotationPoint(-2.5F, 6.5F, -10.0F);
      this.light1.addBox(0.0F, 0.0F, 0.0F, 1, 1, 3, 0.0F);
      this.vent1 = new ModelRenderer(this, 10, 0);
      this.vent1.setRotationPoint(0.0F, 7.0F, -5.0F);
      this.vent1.addBox(-1.5F, -0.5F, -1.5F, 3, 1, 3, 0.0F);
      this.shapess5 = new ModelRenderer(this, 0, 16);
      this.shapess5.setRotationPoint(8.0F, -1.0F, -1.0F);
      this.shapess5.addBox(0.0F, 0.0F, -0.5F, 1, 2, 3, 0.0F);
      this.shapeR4 = new ModelRenderer(this, 0, 21);
      this.shapeR4.setRotationPoint(0.0F, -1.0F, -5.7F);
      this.shapeR4.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 1, 0.0F);
      this.shapeR4.addChild(this.spawnerR3);
      this.shapeR1.addChild(this.spawnerR1);
      this.shape3.addChild(this.shape4);
      this.shapeR2.addChild(this.spawnerR2);
      this.shapess4.addChild(this.shapess5);
      this.shapeR3.addChild(this.shapeR4);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.disableCull();
      float ft1 = GetMOP.getfromto(f, 0.3F, 0.8F);
      float ft2 = GetMOP.getfromto(f, 0.0F, 0.5F);
      float ft3 = GetMOP.getfromto(f, 0.5F, 1.0F);
      float ft4 = GetMOP.getfromto(f, 0.1F, 0.3F);
      this.shapeR1.rotateAngleY = -0.488F * ft1;
      this.shapeR2.rotateAngleY = 0.488F * ft1;
      this.shapess4.rotateAngleY = -0.488F * ft2;
      this.shapeR3.rotateAngleX = 0.31F * ft3;
      this.spawnerR1.offsetZ = -0.5F * ft4;
      this.spawnerR2.offsetZ = this.spawnerR1.offsetZ;
      if (f < 1.0F) {
         this.portal1.rotateAngleZ = AnimationTimer.tick * 0.03F;
         this.portal2.rotateAngleZ = AnimationTimer.tick * -0.0253F;
         this.portal3.rotateAngleZ = AnimationTimer.tick * 0.0341F;
         this.portal4.rotateAngleZ = AnimationTimer.tick * -0.0412F;
         this.vent2.rotateAngleY = AnimationTimer.tick * 0.06F;
      } else {
         this.portal1.rotateAngleZ = AnimationTimer.tick * 0.06F;
         this.portal2.rotateAngleZ = AnimationTimer.tick * -0.0553F;
         this.portal3.rotateAngleZ = AnimationTimer.tick * 0.0661F;
         this.portal4.rotateAngleZ = AnimationTimer.tick * -0.0812F;
         this.vent2.rotateAngleY = AnimationTimer.tick * 0.182F;
      }

      this.shapefr4.render(f5);
      this.shapess1.render(f5);
      this.shapefr1.render(f5);
      this.light1.render(f5);
      this.shape1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape3.offsetX, this.shape3.offsetY, this.shape3.offsetZ);
      GlStateManager.translate(this.shape3.rotationPointX * f5, this.shape3.rotationPointY * f5, this.shape3.rotationPointZ * f5);
      GlStateManager.scale(0.9, 0.9, 0.9);
      GlStateManager.translate(-this.shape3.offsetX, -this.shape3.offsetY, -this.shape3.offsetZ);
      GlStateManager.translate(-this.shape3.rotationPointX * f5, -this.shape3.rotationPointY * f5, -this.shape3.rotationPointZ * f5);
      this.shape3.render(f5);
      GlStateManager.popMatrix();
      AbstractMobModel.light(100, true);
      this.crystal.render(f5);
      AbstractMobModel.returnlight();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess4.offsetX, this.shapess4.offsetY, this.shapess4.offsetZ);
      GlStateManager.translate(this.shapess4.rotationPointX * f5, this.shapess4.rotationPointY * f5, this.shapess4.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.shapess4.offsetX, -this.shapess4.offsetY, -this.shapess4.offsetZ);
      GlStateManager.translate(-this.shapess4.rotationPointX * f5, -this.shapess4.rotationPointY * f5, -this.shapess4.rotationPointZ * f5);
      this.shapess4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.spawner.offsetX, this.spawner.offsetY, this.spawner.offsetZ);
      GlStateManager.translate(this.spawner.rotationPointX * f5, this.spawner.rotationPointY * f5, this.spawner.rotationPointZ * f5);
      GlStateManager.scale(0.99, 0.99, 0.99);
      GlStateManager.translate(-this.spawner.offsetX, -this.spawner.offsetY, -this.spawner.offsetZ);
      GlStateManager.translate(-this.spawner.rotationPointX * f5, -this.spawner.rotationPointY * f5, -this.spawner.rotationPointZ * f5);
      this.spawner.render(f5);
      GlStateManager.popMatrix();
      this.shape2.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess2.offsetX, this.shapess2.offsetY, this.shapess2.offsetZ);
      GlStateManager.translate(this.shapess2.rotationPointX * f5, this.shapess2.rotationPointY * f5, this.shapess2.rotationPointZ * f5);
      GlStateManager.scale(1.1, 1.0, 1.0);
      GlStateManager.translate(-this.shapess2.offsetX, -this.shapess2.offsetY, -this.shapess2.offsetZ);
      GlStateManager.translate(-this.shapess2.rotationPointX * f5, -this.shapess2.rotationPointY * f5, -this.shapess2.rotationPointZ * f5);
      this.shapess2.render(f5);
      GlStateManager.popMatrix();
      this.shape5.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess3.offsetX, this.shapess3.offsetY, this.shapess3.offsetZ);
      GlStateManager.translate(this.shapess3.rotationPointX * f5, this.shapess3.rotationPointY * f5, this.shapess3.rotationPointZ * f5);
      GlStateManager.scale(0.9, 1.0, 1.0);
      GlStateManager.translate(-this.shapess3.offsetX, -this.shapess3.offsetY, -this.shapess3.offsetZ);
      GlStateManager.translate(-this.shapess3.rotationPointX * f5, -this.shapess3.rotationPointY * f5, -this.shapess3.rotationPointZ * f5);
      this.shapess3.render(f5);
      GlStateManager.popMatrix();
      this.shapeR2.render(f5);
      this.shapeR3.render(f5);
      this.shapefr3.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.vent1.offsetX, this.vent1.offsetY, this.vent1.offsetZ);
      GlStateManager.translate(this.vent1.rotationPointX * f5, this.vent1.rotationPointY * f5, this.vent1.rotationPointZ * f5);
      GlStateManager.scale(0.9, 0.9, 0.9);
      GlStateManager.translate(-this.vent1.offsetX, -this.vent1.offsetY, -this.vent1.offsetZ);
      GlStateManager.translate(-this.vent1.rotationPointX * f5, -this.vent1.rotationPointY * f5, -this.vent1.rotationPointZ * f5);
      this.vent1.render(f5);
      GlStateManager.popMatrix();
      this.shapefr2.render(f5);
      this.shapeR1.render(f5);
      if (f1 == 0.0F) {
         GlStateManager.pushMatrix();
         GlStateManager.translate(this.vent2.offsetX, this.vent2.offsetY, this.vent2.offsetZ);
         GlStateManager.translate(this.vent2.rotationPointX * f5, this.vent2.rotationPointY * f5, this.vent2.rotationPointZ * f5);
         GlStateManager.scale(0.9, 0.9, 0.9);
         GlStateManager.translate(-this.vent2.offsetX, -this.vent2.offsetY, -this.vent2.offsetZ);
         GlStateManager.translate(-this.vent2.rotationPointX * f5, -this.vent2.rotationPointY * f5, -this.vent2.rotationPointZ * f5);
         this.vent2.render(f5);
         GlStateManager.popMatrix();
         AbstractMobModel.light(240, false);
         AbstractMobModel.alphaGlow();
         this.light3.render(f5);
         this.portal4.render(f5);
         this.portal2.render(f5);
         this.portal1.render(f5);
         this.portal3.render(f5);
         GlStateManager.pushMatrix();
         GlStateManager.translate(this.light2.offsetX, this.light2.offsetY, this.light2.offsetZ);
         GlStateManager.translate(this.light2.rotationPointX * f5, this.light2.rotationPointY * f5, this.light2.rotationPointZ * f5);
         GlStateManager.scale(1.0, 1.0, 2.2);
         GlStateManager.translate(-this.light2.offsetX, -this.light2.offsetY, -this.light2.offsetZ);
         GlStateManager.translate(-this.light2.rotationPointX * f5, -this.light2.rotationPointY * f5, -this.light2.rotationPointZ * f5);
         this.light2.render(f5);
         GlStateManager.popMatrix();
         AbstractMobModel.alphaGlowDisable();
         AbstractMobModel.returnlight();
      }

      GlStateManager.enableCull();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
