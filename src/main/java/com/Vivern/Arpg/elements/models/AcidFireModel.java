//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

public class AcidFireModel extends ModelBase {
   public ModelRenderer shapess;
   public ModelRenderer shape;
   public ModelRenderer shape_1;
   public ModelRenderer shapelight2;
   public ModelRenderer shape_2;
   public ModelRenderer shapelight1;
   public ModelRenderer charge;
   public ModelRenderer charge_1;
   public ModelRenderer charge_2;
   public ModelRenderer charge_3;
   public ModelRenderer charge_4;
   public ModelRenderer charge_5;
   public ModelRenderer pipe;
   public ModelRenderer pipe_1;
   public ModelRenderer pipe_2;
   public ModelRenderer pipe_3;
   public ModelRenderer pipe_4;

   public AcidFireModel() {
      this.textureWidth = 26;
      this.textureHeight = 16;
      this.charge_1 = new ModelRenderer(this, 18, 10);
      this.charge_1.setRotationPoint(0.0F, -0.8F, 1.3F);
      this.charge_1.addBox(0.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge_1, 0.0F, 0.0F, 0.7740535F);
      this.shapelight1 = new ModelRenderer(this, 4, 10);
      this.shapelight1.setRotationPoint(-1.0F, -1.0F, -7.6F);
      this.shapelight1.addBox(0.0F, 0.0F, 0.0F, 2, 2, 1, 0.0F);
      this.charge_2 = new ModelRenderer(this, 18, 10);
      this.charge_2.setRotationPoint(0.0F, -0.8F, -1.1F);
      this.charge_2.addBox(0.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge_2, 0.0F, 0.0F, 0.7740535F);
      this.charge_4 = new ModelRenderer(this, 18, 10);
      this.charge_4.setRotationPoint(0.0F, -0.8F, -3.5F);
      this.charge_4.addBox(-2.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge_4, 0.0F, 0.0F, -0.7740535F);
      this.charge = new ModelRenderer(this, 18, 10);
      this.charge.setRotationPoint(0.0F, -0.8F, -3.5F);
      this.charge.addBox(0.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge, 0.0F, 0.0F, 0.7740535F);
      this.pipe_3 = new ModelRenderer(this, 10, 11);
      this.pipe_3.setRotationPoint(-0.5F, 4.0F, -2.5F);
      this.pipe_3.addBox(0.0F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.pipe_3, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.shape = new ModelRenderer(this, 0, 0);
      this.shape.setRotationPoint(-1.5F, -1.3F, 3.5F);
      this.shape.addBox(0.0F, 0.0F, 0.0F, 3, 3, 3, 0.0F);
      this.charge_5 = new ModelRenderer(this, 18, 10);
      this.charge_5.setRotationPoint(0.0F, -0.8F, -1.1F);
      this.charge_5.addBox(-2.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge_5, 0.0F, 0.0F, -0.7740535F);
      this.shapess = new ModelRenderer(this, 0, 6);
      this.shapess.setRotationPoint(0.0F, 2.0F, 4.5F);
      this.shapess.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.shapess, 0.27314404F, 0.0F, 0.0F);
      this.pipe_2 = new ModelRenderer(this, 10, 11);
      this.pipe_2.setRotationPoint(-0.5F, 1.0F, -3.5F);
      this.pipe_2.addBox(0.0F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.pipe_1 = new ModelRenderer(this, 10, 11);
      this.pipe_1.setRotationPoint(-0.5F, 3.0F, -6.5F);
      this.pipe_1.addBox(0.0F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.pipe_1, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.shape_1 = new ModelRenderer(this, 16, 0);
      this.shape_1.setRotationPoint(-1.0F, -1.3F, 6.5F);
      this.shape_1.addBox(0.0F, 0.0F, 0.0F, 2, 3, 3, 0.0F);
      this.shape_2 = new ModelRenderer(this, 4, 0);
      this.shape_2.setRotationPoint(-1.0F, -1.0F, -4.5F);
      this.shape_2.addBox(0.0F, 0.0F, 0.0F, 2, 2, 8, 0.0F);
      this.shapelight2 = new ModelRenderer(this, 0, 11);
      this.shapelight2.setRotationPoint(-0.5F, -0.8F, 9.5F);
      this.shapelight2.addBox(0.0F, 0.0F, 0.0F, 1, 2, 2, 0.0F);
      this.charge_3 = new ModelRenderer(this, 18, 10);
      this.charge_3.setRotationPoint(0.0F, -0.8F, 1.3F);
      this.charge_3.addBox(-2.0F, -2.7F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.charge_3, 0.0F, 0.0F, -0.7740535F);
      this.pipe = new ModelRenderer(this, 14, 12);
      this.pipe.setRotationPoint(-0.5F, 1.0F, -7.5F);
      this.pipe.addBox(0.0F, 0.0F, 0.0F, 1, 2, 1, 0.0F);
      this.pipe_4 = new ModelRenderer(this, 10, 11);
      this.pipe_4.setRotationPoint(-0.5F, 1.0F, 0.5F);
      this.pipe_4.addBox(0.0F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      float lbX = OpenGlHelper.lastBrightnessX;
      float lbY = OpenGlHelper.lastBrightnessY;
      this.pipe_3.render(f5);
      this.shape.render(f5);
      this.shapess.render(f5);
      this.pipe_2.render(f5);
      this.pipe_1.render(f5);
      this.shape_1.render(f5);
      this.shape_2.render(f5);
      this.pipe.render(f5);
      this.pipe_4.render(f5);
      GlStateManager.pushMatrix();
      GL11.glDisable(2896);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, Math.min(240.0F, 150.0F + lbX), Math.min(240.0F, 150.0F + lbY));
      GlStateManager.translate(this.charge_5.offsetX, this.charge_5.offsetY, this.charge_5.offsetZ);
      GlStateManager.translate(this.charge_5.rotationPointX * f5, this.charge_5.rotationPointY * f5, this.charge_5.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge_5.offsetX, -this.charge_5.offsetY, -this.charge_5.offsetZ);
      GlStateManager.translate(-this.charge_5.rotationPointX * f5, -this.charge_5.rotationPointY * f5, -this.charge_5.rotationPointZ * f5);
      this.charge_5.render(f5);
      GlStateManager.popMatrix();
      this.shapelight2.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.charge_3.offsetX, this.charge_3.offsetY, this.charge_3.offsetZ);
      GlStateManager.translate(this.charge_3.rotationPointX * f5, this.charge_3.rotationPointY * f5, this.charge_3.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge_3.offsetX, -this.charge_3.offsetY, -this.charge_3.offsetZ);
      GlStateManager.translate(-this.charge_3.rotationPointX * f5, -this.charge_3.rotationPointY * f5, -this.charge_3.rotationPointZ * f5);
      this.charge_3.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.charge_1.offsetX, this.charge_1.offsetY, this.charge_1.offsetZ);
      GlStateManager.translate(this.charge_1.rotationPointX * f5, this.charge_1.rotationPointY * f5, this.charge_1.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge_1.offsetX, -this.charge_1.offsetY, -this.charge_1.offsetZ);
      GlStateManager.translate(-this.charge_1.rotationPointX * f5, -this.charge_1.rotationPointY * f5, -this.charge_1.rotationPointZ * f5);
      this.charge_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapelight1.offsetX, this.shapelight1.offsetY, this.shapelight1.offsetZ);
      GlStateManager.translate(this.shapelight1.rotationPointX * f5, this.shapelight1.rotationPointY * f5, this.shapelight1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.0, 1.2);
      GlStateManager.translate(-this.shapelight1.offsetX, -this.shapelight1.offsetY, -this.shapelight1.offsetZ);
      GlStateManager.translate(-this.shapelight1.rotationPointX * f5, -this.shapelight1.rotationPointY * f5, -this.shapelight1.rotationPointZ * f5);
      this.shapelight1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.charge_2.offsetX, this.charge_2.offsetY, this.charge_2.offsetZ);
      GlStateManager.translate(this.charge_2.rotationPointX * f5, this.charge_2.rotationPointY * f5, this.charge_2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge_2.offsetX, -this.charge_2.offsetY, -this.charge_2.offsetZ);
      GlStateManager.translate(-this.charge_2.rotationPointX * f5, -this.charge_2.rotationPointY * f5, -this.charge_2.rotationPointZ * f5);
      this.charge_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.charge_4.offsetX, this.charge_4.offsetY, this.charge_4.offsetZ);
      GlStateManager.translate(this.charge_4.rotationPointX * f5, this.charge_4.rotationPointY * f5, this.charge_4.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge_4.offsetX, -this.charge_4.offsetY, -this.charge_4.offsetZ);
      GlStateManager.translate(-this.charge_4.rotationPointX * f5, -this.charge_4.rotationPointY * f5, -this.charge_4.rotationPointZ * f5);
      this.charge_4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.charge.offsetX, this.charge.offsetY, this.charge.offsetZ);
      GlStateManager.translate(this.charge.rotationPointX * f5, this.charge.rotationPointY * f5, this.charge.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 0.8);
      GlStateManager.translate(-this.charge.offsetX, -this.charge.offsetY, -this.charge.offsetZ);
      GlStateManager.translate(-this.charge.rotationPointX * f5, -this.charge.rotationPointY * f5, -this.charge.rotationPointZ * f5);
      this.charge.render(f5);
      GL11.glEnable(2896);
      GlStateManager.popMatrix();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
