//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

public class ChargerModel extends ModelBase {
   public ModelRenderer shapess1;
   public ModelRenderer shape1;
   public ModelRenderer shape3;
   public ModelRenderer rod;
   public ModelRenderer levit3;
   public ModelRenderer levit2;
   public ModelRenderer levit1;
   public ModelRenderer shape2;
   public ModelRenderer shapeaaa1;
   public ModelRenderer shapeaaa2;
   public ModelRenderer shapeaaa3;
   public ModelRenderer shapeaaa4;
   public ModelRenderer rod2;

   public ChargerModel() {
      this.textureWidth = 22;
      this.textureHeight = 32;
      this.shape1 = new ModelRenderer(this, 12, 4);
      this.shape1.setRotationPoint(0.0F, 0.2F, 3.0F);
      this.shape1.addBox(-1.0F, -0.5F, 0.0F, 2, 1, 3, 0.0F);
      this.shape2 = new ModelRenderer(this, 12, 0);
      this.shape2.setRotationPoint(0.0F, -1.0F, -2.2F);
      this.shape2.addBox(-1.0F, -0.5F, 0.0F, 2, 1, 3, 0.0F);
      this.shapeaaa1 = new ModelRenderer(this, 0, 12);
      this.shapeaaa1.setRotationPoint(0.0F, 0.5F, -0.7F);
      this.shapeaaa1.addBox(-1.5F, -0.5F, 1.0F, 3, 2, 4, 0.0F);
      this.setRotateAngle(this.shapeaaa1, 0.7740535F, 0.0F, 0.0F);
      this.rod2 = new ModelRenderer(this, 0, 0);
      this.rod2.setRotationPoint(0.0F, 0.25F, 1.3F);
      this.rod2.addBox(-1.0F, -0.5F, -1.0F, 2, 10, 2, 0.0F);
      this.setRotateAngle(this.rod2, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.levit1 = new ModelRenderer(this, 0, 23);
      this.levit1.setRotationPoint(0.0F, 1.6F, -2.2F);
      this.levit1.addBox(-0.5F, -0.5F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.levit1, -0.68294734F, 0.0F, 0.0F);
      this.levit2 = new ModelRenderer(this, 0, 23);
      this.levit2.setRotationPoint(0.0F, 2.7F, -0.3F);
      this.levit2.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.levit2, -0.68294734F, 0.0F, 0.0F);
      this.shapess1 = new ModelRenderer(this, 12, 25);
      this.shapess1.setRotationPoint(0.0F, 2.0F, 4.5F);
      this.shapess1.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.shapess1, 0.18203785F, 0.0F, 0.0F);
      this.shapeaaa4 = new ModelRenderer(this, 0, 18);
      this.shapeaaa4.setRotationPoint(0.0F, -1.8F, 6.0F);
      this.shapeaaa4.addBox(-1.0F, -0.5F, 0.0F, 2, 2, 3, 0.0F);
      this.setRotateAngle(this.shapeaaa4, -0.22759093F, 0.0F, 0.0F);
      this.rod = new ModelRenderer(this, 8, 0);
      this.rod.setRotationPoint(0.0F, 0.25F, 1.36F);
      this.rod.addBox(-0.5F, -0.5F, -0.5F, 1, 10, 1, 0.0F);
      this.setRotateAngle(this.rod, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.levit3 = new ModelRenderer(this, 0, 23);
      this.levit3.setRotationPoint(0.0F, 4.0F, 1.5F);
      this.levit3.addBox(-0.5F, -0.5F, 0.0F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.levit3, -0.68294734F, 0.0F, 0.0F);
      this.shapeaaa2 = new ModelRenderer(this, 0, 25);
      this.shapeaaa2.setRotationPoint(0.0F, -0.6F, 1.3F);
      this.shapeaaa2.addBox(-1.5F, -0.5F, 0.0F, 3, 2, 5, 0.0F);
      this.setRotateAngle(this.shapeaaa2, 0.5462881F, 0.0F, 0.0F);
      this.shapeaaa3 = new ModelRenderer(this, 0, 25);
      this.shapeaaa3.setRotationPoint(0.0F, -1.3F, 3.3F);
      this.shapeaaa3.addBox(-1.5F, -0.5F, 0.0F, 3, 2, 5, 0.0F);
      this.setRotateAngle(this.shapeaaa3, 0.27314404F, 0.0F, 0.0F);
      this.shape3 = new ModelRenderer(this, 8, 19);
      this.shape3.setRotationPoint(0.0F, 6.2F, 2.7F);
      this.shape3.addBox(-1.0F, -0.5F, 0.0F, 2, 1, 5, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa1.offsetX, this.shapeaaa1.offsetY, this.shapeaaa1.offsetZ);
      GlStateManager.translate(this.shapeaaa1.rotationPointX * f5, this.shapeaaa1.rotationPointY * f5, this.shapeaaa1.rotationPointZ * f5);
      GlStateManager.scale(0.8, 1.0, 0.6);
      GlStateManager.translate(-this.shapeaaa1.offsetX, -this.shapeaaa1.offsetY, -this.shapeaaa1.offsetZ);
      GlStateManager.translate(-this.shapeaaa1.rotationPointX * f5, -this.shapeaaa1.rotationPointY * f5, -this.shapeaaa1.rotationPointZ * f5);
      this.shapeaaa1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess1.offsetX, this.shapess1.offsetY, this.shapess1.offsetZ);
      GlStateManager.translate(this.shapess1.rotationPointX * f5, this.shapess1.rotationPointY * f5, this.shapess1.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.0, 1.2);
      GlStateManager.translate(-this.shapess1.offsetX, -this.shapess1.offsetY, -this.shapess1.offsetZ);
      GlStateManager.translate(-this.shapess1.rotationPointX * f5, -this.shapess1.rotationPointY * f5, -this.shapess1.rotationPointZ * f5);
      this.shapess1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa4.offsetX, this.shapeaaa4.offsetY, this.shapeaaa4.offsetZ);
      GlStateManager.translate(this.shapeaaa4.rotationPointX * f5, this.shapeaaa4.rotationPointY * f5, this.shapeaaa4.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.8, 0.7);
      GlStateManager.translate(-this.shapeaaa4.offsetX, -this.shapeaaa4.offsetY, -this.shapeaaa4.offsetZ);
      GlStateManager.translate(-this.shapeaaa4.rotationPointX * f5, -this.shapeaaa4.rotationPointY * f5, -this.shapeaaa4.rotationPointZ * f5);
      this.shapeaaa4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa2.offsetX, this.shapeaaa2.offsetY, this.shapeaaa2.offsetZ);
      GlStateManager.translate(this.shapeaaa2.rotationPointX * f5, this.shapeaaa2.rotationPointY * f5, this.shapeaaa2.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.1, 0.7);
      GlStateManager.translate(-this.shapeaaa2.offsetX, -this.shapeaaa2.offsetY, -this.shapeaaa2.offsetZ);
      GlStateManager.translate(-this.shapeaaa2.rotationPointX * f5, -this.shapeaaa2.rotationPointY * f5, -this.shapeaaa2.rotationPointZ * f5);
      this.shapeaaa2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa3.offsetX, this.shapeaaa3.offsetY, this.shapeaaa3.offsetZ);
      GlStateManager.translate(this.shapeaaa3.rotationPointX * f5, this.shapeaaa3.rotationPointY * f5, this.shapeaaa3.rotationPointZ * f5);
      GlStateManager.scale(0.7, 1.1, 0.7);
      GlStateManager.translate(-this.shapeaaa3.offsetX, -this.shapeaaa3.offsetY, -this.shapeaaa3.offsetZ);
      GlStateManager.translate(-this.shapeaaa3.rotationPointX * f5, -this.shapeaaa3.rotationPointY * f5, -this.shapeaaa3.rotationPointZ * f5);
      this.shapeaaa3.render(f5);
      GlStateManager.popMatrix();
      this.shape3.render(f5);
      GlStateManager.pushMatrix();
      GL11.glDisable(2896);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 130.0F, 130.0F);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.levit1.offsetX, this.levit1.offsetY, this.levit1.offsetZ);
      GlStateManager.translate(this.levit1.rotationPointX * f5, this.levit1.rotationPointY * f5, this.levit1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.7, 1.2);
      GlStateManager.translate(-this.levit1.offsetX, -this.levit1.offsetY, -this.levit1.offsetZ);
      GlStateManager.translate(-this.levit1.rotationPointX * f5, -this.levit1.rotationPointY * f5, -this.levit1.rotationPointZ * f5);
      this.levit1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.levit2.offsetX, this.levit2.offsetY, this.levit2.offsetZ);
      GlStateManager.translate(this.levit2.rotationPointX * f5, this.levit2.rotationPointY * f5, this.levit2.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.7, 1.2);
      GlStateManager.translate(-this.levit2.offsetX, -this.levit2.offsetY, -this.levit2.offsetZ);
      GlStateManager.translate(-this.levit2.rotationPointX * f5, -this.levit2.rotationPointY * f5, -this.levit2.rotationPointZ * f5);
      this.levit2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.levit3.offsetX, this.levit3.offsetY, this.levit3.offsetZ);
      GlStateManager.translate(this.levit3.rotationPointX * f5, this.levit3.rotationPointY * f5, this.levit3.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.7, 1.2);
      GlStateManager.translate(-this.levit3.offsetX, -this.levit3.offsetY, -this.levit3.offsetZ);
      GlStateManager.translate(-this.levit3.rotationPointX * f5, -this.levit3.rotationPointY * f5, -this.levit3.rotationPointZ * f5);
      this.levit3.render(f5);
      GlStateManager.popMatrix();
      this.shape1.render(f5);
      this.shape2.render(f5);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 240.0F, 240.0F);
      this.rod.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.rod2.offsetX, this.rod2.offsetY, this.rod2.offsetZ);
      GlStateManager.translate(this.rod2.rotationPointX * f5, this.rod2.rotationPointY * f5, this.rod2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 1.0);
      GlStateManager.translate(-this.rod2.offsetX, -this.rod2.offsetY, -this.rod2.offsetZ);
      GlStateManager.translate(-this.rod2.rotationPointX * f5, -this.rod2.rotationPointY * f5, -this.rod2.rotationPointZ * f5);
      GlStateManager.rotate(f1, 0.0F, 0.0F, 1.0F);
      this.rod2.render(f5);
      GlStateManager.popMatrix();
      GL11.glEnable(2896);
      GlStateManager.popMatrix();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
