//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

public class PlasmaRailgunModel extends ModelBase {
   public ModelRenderer shapess1;
   public ModelRenderer shape1;
   public ModelRenderer shape2;
   public ModelRenderer shape4;
   public ModelRenderer rod;
   public ModelRenderer shape3;
   public ModelRenderer coil;
   public ModelRenderer coil_1;
   public ModelRenderer coil_2;
   public ModelRenderer scope;
   public ModelRenderer scope_1;
   public ModelRenderer roddd;
   public ModelRenderer scope_2;
   public ModelRenderer shapeaaa1;
   public ModelRenderer shapeaaa1_1;
   public ModelRenderer shapeaaa1_2;
   public ModelRenderer roddd_1;
   public ModelRenderer roddd_2;
   public ModelRenderer roddd_3;

   public PlasmaRailgunModel() {
      this.textureWidth = 18;
      this.textureHeight = 32;
      this.roddd_3 = new ModelRenderer(this, 10, 0);
      this.roddd_3.mirror = true;
      this.roddd_3.setRotationPoint(-1.0F, 1.0F, -1.5F);
      this.roddd_3.addBox(-0.5F, -1.0F, -0.5F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.roddd_3, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.coil_2 = new ModelRenderer(this, 0, 0);
      this.coil_2.setRotationPoint(0.0F, 0.0F, -11.5F);
      this.coil_2.addBox(-1.5F, -1.5F, -1.0F, 3, 3, 2, 0.0F);
      this.coil_1 = new ModelRenderer(this, 0, 0);
      this.coil_1.setRotationPoint(0.0F, 0.0F, -3.5F);
      this.coil_1.addBox(-1.5F, -1.5F, -1.0F, 3, 3, 2, 0.0F);
      this.shapeaaa1 = new ModelRenderer(this, 0, 12);
      this.shapeaaa1.setRotationPoint(0.0F, -1.2F, 7.5F);
      this.shapeaaa1.addBox(-1.0F, -0.5F, 1.0F, 2, 3, 1, 0.0F);
      this.setRotateAngle(this.shapeaaa1, -0.4098033F, 0.0F, 0.0F);
      this.shape3 = new ModelRenderer(this, 14, 18);
      this.shape3.setRotationPoint(0.0F, 3.0F, -2.5F);
      this.shape3.addBox(-0.5F, -1.0F, -0.5F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.shape3, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.shapess1 = new ModelRenderer(this, 0, 25);
      this.shapess1.setRotationPoint(0.0F, 2.0F, 4.5F);
      this.shapess1.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.shapess1, 0.18203785F, 0.0F, 0.0F);
      this.scope_2 = new ModelRenderer(this, 14, 24);
      this.scope_2.setRotationPoint(3.0F, -1.9F, 2.8F);
      this.scope_2.addBox(-0.5F, -1.0F, -0.5F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.scope_2, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.shape1 = new ModelRenderer(this, 0, 25);
      this.shape1.setRotationPoint(0.0F, -1.0F, 4.5F);
      this.shape1.addBox(-1.5F, -0.5F, -3.0F, 3, 3, 5, 0.0F);
      this.coil = new ModelRenderer(this, 0, 0);
      this.coil.setRotationPoint(0.0F, 0.0F, -7.5F);
      this.coil.addBox(-1.5F, -1.5F, -1.0F, 3, 3, 2, 0.0F);
      this.shapeaaa1_1 = new ModelRenderer(this, 0, 5);
      this.shapeaaa1_1.setRotationPoint(0.0F, -1.2F, 12.1F);
      this.shapeaaa1_1.addBox(-1.0F, -1.1F, 1.0F, 2, 6, 1, 0.0F);
      this.setRotateAngle(this.shapeaaa1_1, -0.4098033F, 0.0F, 0.0F);
      this.roddd_1 = new ModelRenderer(this, 10, 0);
      this.roddd_1.mirror = true;
      this.roddd_1.setRotationPoint(1.0F, -1.0F, -1.5F);
      this.roddd_1.addBox(-0.5F, -1.0F, -0.5F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.roddd_1, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.shape2 = new ModelRenderer(this, 0, 19);
      this.shape2.setRotationPoint(0.0F, -1.0F, 0.5F);
      this.shape2.addBox(-2.0F, -1.0F, -1.0F, 4, 4, 2, 0.0F);
      this.roddd = new ModelRenderer(this, 10, 0);
      this.roddd.setRotationPoint(1.0F, 1.0F, -1.5F);
      this.roddd.addBox(-0.5F, -1.0F, -0.5F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.roddd, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.shapeaaa1_2 = new ModelRenderer(this, 0, 16);
      this.shapeaaa1_2.setRotationPoint(0.0F, -1.2F, 9.7F);
      this.shapeaaa1_2.addBox(-1.0F, -0.6F, 1.0F, 2, 2, 1, 0.0F);
      this.setRotateAngle(this.shapeaaa1_2, -0.4098033F, 0.0F, 0.0F);
      this.scope_1 = new ModelRenderer(this, 6, 5);
      this.scope_1.setRotationPoint(0.5F, -3.2F, -0.5F);
      this.scope_1.addBox(-0.5F, -1.0F, -0.5F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.scope_1, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.scope = new ModelRenderer(this, 10, 13);
      this.scope.setRotationPoint(0.5F, -3.2F, 4.5F);
      this.scope.addBox(-0.5F, -1.0F, -0.5F, 1, 5, 1, 0.0F);
      this.setRotateAngle(this.scope, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.roddd_2 = new ModelRenderer(this, 10, 0);
      this.roddd_2.setRotationPoint(-1.0F, -1.0F, -1.5F);
      this.roddd_2.addBox(-0.5F, -1.0F, -0.5F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.roddd_2, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.shape4 = new ModelRenderer(this, 14, 18);
      this.shape4.setRotationPoint(0.0F, 4.5F, -2.0F);
      this.shape4.addBox(-0.5F, -1.0F, -0.5F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.shape4, (float) (-Math.PI / 2), 0.0F, 0.0F);
      this.rod = new ModelRenderer(this, 14, 1);
      this.rod.setRotationPoint(0.0F, 0.0F, 0.5F);
      this.rod.addBox(-0.5F, -1.0F, -0.5F, 1, 16, 1, 0.0F);
      this.setRotateAngle(this.rod, (float) (-Math.PI / 2), 0.0F, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.roddd_3.offsetX, this.roddd_3.offsetY, this.roddd_3.offsetZ);
      GlStateManager.translate(this.roddd_3.rotationPointX * f5, this.roddd_3.rotationPointY * f5, this.roddd_3.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 1.01);
      GlStateManager.translate(-this.roddd_3.offsetX, -this.roddd_3.offsetY, -this.roddd_3.offsetZ);
      GlStateManager.translate(-this.roddd_3.rotationPointX * f5, -this.roddd_3.rotationPointY * f5, -this.roddd_3.rotationPointZ * f5);
      this.roddd_3.render(f5);
      GlStateManager.popMatrix();
      this.coil_2.render(f5);
      this.coil_1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa1.offsetX, this.shapeaaa1.offsetY, this.shapeaaa1.offsetZ);
      GlStateManager.translate(this.shapeaaa1.rotationPointX * f5, this.shapeaaa1.rotationPointY * f5, this.shapeaaa1.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.9);
      GlStateManager.translate(-this.shapeaaa1.offsetX, -this.shapeaaa1.offsetY, -this.shapeaaa1.offsetZ);
      GlStateManager.translate(-this.shapeaaa1.rotationPointX * f5, -this.shapeaaa1.rotationPointY * f5, -this.shapeaaa1.rotationPointZ * f5);
      this.shapeaaa1.render(f5);
      GlStateManager.popMatrix();
      this.shape3.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess1.offsetX, this.shapess1.offsetY, this.shapess1.offsetZ);
      GlStateManager.translate(this.shapess1.rotationPointX * f5, this.shapess1.rotationPointY * f5, this.shapess1.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.0, 1.2);
      GlStateManager.translate(-this.shapess1.offsetX, -this.shapess1.offsetY, -this.shapess1.offsetZ);
      GlStateManager.translate(-this.shapess1.rotationPointX * f5, -this.shapess1.rotationPointY * f5, -this.shapess1.rotationPointZ * f5);
      this.shapess1.render(f5);
      GlStateManager.popMatrix();
      this.scope_2.render(f5);
      this.shape1.render(f5);
      this.coil.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa1_1.offsetX, this.shapeaaa1_1.offsetY, this.shapeaaa1_1.offsetZ);
      GlStateManager.translate(this.shapeaaa1_1.rotationPointX * f5, this.shapeaaa1_1.rotationPointY * f5, this.shapeaaa1_1.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.7, 1.0);
      GlStateManager.translate(-this.shapeaaa1_1.offsetX, -this.shapeaaa1_1.offsetY, -this.shapeaaa1_1.offsetZ);
      GlStateManager.translate(-this.shapeaaa1_1.rotationPointX * f5, -this.shapeaaa1_1.rotationPointY * f5, -this.shapeaaa1_1.rotationPointZ * f5);
      this.shapeaaa1_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.roddd_1.offsetX, this.roddd_1.offsetY, this.roddd_1.offsetZ);
      GlStateManager.translate(this.roddd_1.rotationPointX * f5, this.roddd_1.rotationPointY * f5, this.roddd_1.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 1.01);
      GlStateManager.translate(-this.roddd_1.offsetX, -this.roddd_1.offsetY, -this.roddd_1.offsetZ);
      GlStateManager.translate(-this.roddd_1.rotationPointX * f5, -this.roddd_1.rotationPointY * f5, -this.roddd_1.rotationPointZ * f5);
      this.roddd_1.render(f5);
      GlStateManager.popMatrix();
      this.shape2.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.roddd.offsetX, this.roddd.offsetY, this.roddd.offsetZ);
      GlStateManager.translate(this.roddd.rotationPointX * f5, this.roddd.rotationPointY * f5, this.roddd.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 1.01);
      GlStateManager.translate(-this.roddd.offsetX, -this.roddd.offsetY, -this.roddd.offsetZ);
      GlStateManager.translate(-this.roddd.rotationPointX * f5, -this.roddd.rotationPointY * f5, -this.roddd.rotationPointZ * f5);
      this.roddd.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapeaaa1_2.offsetX, this.shapeaaa1_2.offsetY, this.shapeaaa1_2.offsetZ);
      GlStateManager.translate(this.shapeaaa1_2.rotationPointX * f5, this.shapeaaa1_2.rotationPointY * f5, this.shapeaaa1_2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.7, 1.0);
      GlStateManager.translate(-this.shapeaaa1_2.offsetX, -this.shapeaaa1_2.offsetY, -this.shapeaaa1_2.offsetZ);
      GlStateManager.translate(-this.shapeaaa1_2.rotationPointX * f5, -this.shapeaaa1_2.rotationPointY * f5, -this.shapeaaa1_2.rotationPointZ * f5);
      this.shapeaaa1_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.scope_1.offsetX, this.scope_1.offsetY, this.scope_1.offsetZ);
      GlStateManager.translate(this.scope_1.rotationPointX * f5, this.scope_1.rotationPointY * f5, this.scope_1.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 1.0);
      GlStateManager.translate(-this.scope_1.offsetX, -this.scope_1.offsetY, -this.scope_1.offsetZ);
      GlStateManager.translate(-this.scope_1.rotationPointX * f5, -this.scope_1.rotationPointY * f5, -this.scope_1.rotationPointZ * f5);
      this.scope_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.scope.offsetX, this.scope.offsetY, this.scope.offsetZ);
      GlStateManager.translate(this.scope.rotationPointX * f5, this.scope.rotationPointY * f5, this.scope.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.0);
      GlStateManager.translate(-this.scope.offsetX, -this.scope.offsetY, -this.scope.offsetZ);
      GlStateManager.translate(-this.scope.rotationPointX * f5, -this.scope.rotationPointY * f5, -this.scope.rotationPointZ * f5);
      this.scope.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.roddd_2.offsetX, this.roddd_2.offsetY, this.roddd_2.offsetZ);
      GlStateManager.translate(this.roddd_2.rotationPointX * f5, this.roddd_2.rotationPointY * f5, this.roddd_2.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 1.01);
      GlStateManager.translate(-this.roddd_2.offsetX, -this.roddd_2.offsetY, -this.roddd_2.offsetZ);
      GlStateManager.translate(-this.roddd_2.rotationPointX * f5, -this.roddd_2.rotationPointY * f5, -this.roddd_2.rotationPointZ * f5);
      this.roddd_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape4.offsetX, this.shape4.offsetY, this.shape4.offsetZ);
      GlStateManager.translate(this.shape4.rotationPointX * f5, this.shape4.rotationPointY * f5, this.shape4.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 1.0);
      GlStateManager.translate(-this.shape4.offsetX, -this.shape4.offsetY, -this.shape4.offsetZ);
      GlStateManager.translate(-this.shape4.rotationPointX * f5, -this.shape4.rotationPointY * f5, -this.shape4.rotationPointZ * f5);
      this.shape4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GL11.glDisable(2896);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 240.0F, 240.0F);
      this.rod.render(f5);
      GL11.glEnable(2896);
      GlStateManager.popMatrix();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
