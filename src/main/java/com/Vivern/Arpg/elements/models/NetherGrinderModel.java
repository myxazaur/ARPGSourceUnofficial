//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

public class NetherGrinderModel extends ModelBase {
   public ModelRenderer shapessh;
   public ModelRenderer shape1;
   public ModelRenderer shape2;
   public ModelRenderer shape3;
   public ModelRenderer shape4;
   public ModelRenderer shape5;
   public ModelRenderer shaper;
   public ModelRenderer shapeammo;
   public ModelRenderer shapess1;
   public ModelRenderer shape6;
   public ModelRenderer shapess2;
   public ModelRenderer shapess4;
   public ModelRenderer shape7;
   public ModelRenderer shapess5;
   public ModelRenderer shapess3;
   public ModelRenderer shapess6;

   public NetherGrinderModel() {
      this.textureWidth = 32;
      this.textureHeight = 24;
      this.shape7 = new ModelRenderer(this, 20, 17);
      this.shape7.setRotationPoint(0.0F, 0.0F, 14.1F);
      this.shape7.addBox(-1.5F, -3.2F, -0.5F, 3, 6, 1, 0.0F);
      this.setRotateAngle(this.shape7, 0.18203785F, 0.0F, 0.0F);
      this.shape6 = new ModelRenderer(this, 12, 20);
      this.shape6.setRotationPoint(0.0F, 0.0F, 10.0F);
      this.shape6.addBox(-1.5F, -1.5F, -0.5F, 3, 3, 1, 0.0F);
      this.setRotateAngle(this.shape6, 0.18203785F, 0.0F, 0.0F);
      this.shapeammo = new ModelRenderer(this, 0, 18);
      this.shapeammo.setRotationPoint(0.0F, 2.0F, 2.0F);
      this.shapeammo.addBox(-2.0F, -2.0F, -2.0F, 4, 4, 2, 0.0F);
      this.shape4 = new ModelRenderer(this, 12, 0);
      this.shape4.setRotationPoint(0.0F, 0.0F, -8.0F);
      this.shape4.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
      this.shapess5 = new ModelRenderer(this, 11, 16);
      this.shapess5.setRotationPoint(0.0F, -1.0F, 0.5F);
      this.shapess5.addBox(-1.6F, -2.6F, 0.0F, 1, 2, 1, 0.0F);
      this.setRotateAngle(this.shapess5, (float) (-Math.PI / 6), 0.0F, 0.0F);
      this.shapess6 = new ModelRenderer(this, 28, 0);
      this.shapess6.setRotationPoint(0.0F, -3.0F, 0.5F);
      this.shapess6.addBox(-1.59F, -11.4F, 0.05F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.shapess6, (float) (-Math.PI / 3), 0.0F, 0.0F);
      this.shapess3 = new ModelRenderer(this, 28, 0);
      this.shapess3.setRotationPoint(0.0F, -3.0F, 0.5F);
      this.shapess3.addBox(0.59F, -11.4F, 0.05F, 1, 12, 1, 0.0F);
      this.setRotateAngle(this.shapess3, (float) (-Math.PI / 3), 0.0F, 0.0F);
      this.shape3 = new ModelRenderer(this, 14, 10);
      this.shape3.setRotationPoint(0.0F, 0.0F, -5.0F);
      this.shape3.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 1, 0.0F);
      this.shapess4 = new ModelRenderer(this, 28, 19);
      this.shapess4.setRotationPoint(0.0F, 0.5F, 10.9F);
      this.shapess4.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.shapess4, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.shapess2 = new ModelRenderer(this, 11, 16);
      this.shapess2.setRotationPoint(0.0F, -1.0F, 0.5F);
      this.shapess2.addBox(0.6F, -2.6F, 0.0F, 1, 2, 1, 0.0F);
      this.setRotateAngle(this.shapess2, (float) (-Math.PI / 6), 0.0F, 0.0F);
      this.shape1 = new ModelRenderer(this, 0, 0);
      this.shape1.setRotationPoint(0.0F, 0.0F, 2.0F);
      this.shape1.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 6, 0.0F);
      this.shapess1 = new ModelRenderer(this, 0, 9);
      this.shapess1.setRotationPoint(0.0F, -0.3F, 7.0F);
      this.shapess1.addBox(-0.5F, -0.5F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.shapess1, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.shape2 = new ModelRenderer(this, 16, 8);
      this.shape2.setRotationPoint(0.0F, 0.0F, -4.5F);
      this.shape2.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 6, 0.0F);
      this.shapessh = new ModelRenderer(this, 0, 0);
      this.shapessh.setRotationPoint(0.0F, 2.0F, 4.5F);
      this.shapessh.addBox(-0.5F, -0.5F, 0.0F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.shapessh, 0.18203785F, 0.0F, 0.0F);
      this.shape5 = new ModelRenderer(this, 22, 0);
      this.shape5.setRotationPoint(0.0F, 0.0F, -9.5F);
      this.shape5.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 1, 0.0F);
      this.shaper = new ModelRenderer(this, 0, 9);
      this.shaper.setRotationPoint(0.0F, 0.0F, -3.0F);
      this.shaper.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 4, 0.0F);
      this.shapess5.addChild(this.shapess6);
      this.shapess2.addChild(this.shapess3);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      this.shape7.render(f5);
      this.shape6.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape4.offsetX, this.shape4.offsetY, this.shape4.offsetZ);
      GlStateManager.translate(this.shape4.rotationPointX * f5, this.shape4.rotationPointY * f5, this.shape4.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 1.0);
      GlStateManager.translate(-this.shape4.offsetX, -this.shape4.offsetY, -this.shape4.offsetZ);
      GlStateManager.translate(-this.shape4.rotationPointX * f5, -this.shape4.rotationPointY * f5, -this.shape4.rotationPointZ * f5);
      this.shape4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape3.offsetX, this.shape3.offsetY, this.shape3.offsetZ);
      GlStateManager.translate(this.shape3.rotationPointX * f5, this.shape3.rotationPointY * f5, this.shape3.rotationPointZ * f5);
      GlStateManager.scale(1.1, 1.1, 1.0);
      GlStateManager.translate(-this.shape3.offsetX, -this.shape3.offsetY, -this.shape3.offsetZ);
      GlStateManager.translate(-this.shape3.rotationPointX * f5, -this.shape3.rotationPointY * f5, -this.shape3.rotationPointZ * f5);
      this.shape3.render(f5);
      GlStateManager.popMatrix();
      this.shape1.render(f5);
      this.shapessh.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape5.offsetX, this.shape5.offsetY, this.shape5.offsetZ);
      GlStateManager.translate(this.shape5.rotationPointX * f5, this.shape5.rotationPointY * f5, this.shape5.rotationPointZ * f5);
      GlStateManager.scale(0.8, 0.8, 1.0);
      GlStateManager.translate(-this.shape5.offsetX, -this.shape5.offsetY, -this.shape5.offsetZ);
      GlStateManager.translate(-this.shape5.rotationPointX * f5, -this.shape5.rotationPointY * f5, -this.shape5.rotationPointZ * f5);
      this.shape5.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shaper.offsetX, this.shaper.offsetY, this.shaper.offsetZ);
      GlStateManager.translate(this.shaper.rotationPointX * f5, this.shaper.rotationPointY * f5, this.shaper.rotationPointZ * f5);
      GlStateManager.scale(1.2, 1.2, 1.0);
      GlStateManager.translate(-this.shaper.offsetX, -this.shaper.offsetY, -this.shaper.offsetZ);
      GlStateManager.translate(-this.shaper.rotationPointX * f5, -this.shaper.rotationPointY * f5, -this.shaper.rotationPointZ * f5);
      this.shaper.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GL11.glDisable(2896);
      OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 150.0F, 150.0F);
      this.shapeammo.render(f5);
      this.shape2.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess5.offsetX, this.shapess5.offsetY, this.shapess5.offsetZ);
      GlStateManager.translate(this.shapess5.rotationPointX * f5, this.shapess5.rotationPointY * f5, this.shapess5.rotationPointZ * f5);
      GlStateManager.scale(0.8, 1.0, 1.0);
      GlStateManager.translate(-this.shapess5.offsetX, -this.shapess5.offsetY, -this.shapess5.offsetZ);
      GlStateManager.translate(-this.shapess5.rotationPointX * f5, -this.shapess5.rotationPointY * f5, -this.shapess5.rotationPointZ * f5);
      this.shapess5.render(f5);
      GlStateManager.popMatrix();
      this.shapess4.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess2.offsetX, this.shapess2.offsetY, this.shapess2.offsetZ);
      GlStateManager.translate(this.shapess2.rotationPointX * f5, this.shapess2.rotationPointY * f5, this.shapess2.rotationPointZ * f5);
      GlStateManager.scale(0.8, 1.0, 1.0);
      GlStateManager.translate(-this.shapess2.offsetX, -this.shapess2.offsetY, -this.shapess2.offsetZ);
      GlStateManager.translate(-this.shapess2.rotationPointX * f5, -this.shapess2.rotationPointY * f5, -this.shapess2.rotationPointZ * f5);
      this.shapess2.render(f5);
      GlStateManager.popMatrix();
      this.shapess1.render(f5);
      GL11.glEnable(2896);
      GlStateManager.popMatrix();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
