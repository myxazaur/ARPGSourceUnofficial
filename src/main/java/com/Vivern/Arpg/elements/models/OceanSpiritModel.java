//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.main.AnimationTimer;
import com.Vivern.Arpg.main.GetMOP;
import com.Vivern.Arpg.renders.ModelRendererGlow;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.GlStateManager.DestFactor;
import net.minecraft.client.renderer.GlStateManager.SourceFactor;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class OceanSpiritModel extends AbstractMobModel {
   public ModelRenderer tail1;
   public ModelRenderer body;
   public ModelRenderer shape1l;
   public ModelRenderer shape2l;
   public ModelRenderer shapearmLeft;
   public ModelRenderer tantbase;
   public ModelRenderer head1;
   public ModelRenderer fin;
   public ModelRenderer shape1r;
   public ModelRenderer shape2r;
   public ModelRenderer shapearmRight;
   public ModelRenderer tail2;
   public ModelRenderer tail3;
   public ModelRenderer tail4;
   public ModelRenderer seaweed;
   public ModelRenderer spike1l;
   public ModelRenderer spike2l;
   public ModelRenderer armLeft1;
   public ModelRenderer spikeL;
   public ModelRenderer armLeft2;
   public ModelRenderer armLeft3;
   public ModelRenderer sphere;
   public ModelRenderer tent1;
   public ModelRenderer tent2;
   public ModelRenderer tent3;
   public ModelRenderer tent4;
   public ModelRenderer tent5;
   public ModelRenderer head2;
   public ModelRenderer head3;
   public ModelRenderer spike1r;
   public ModelRenderer spike2r;
   public ModelRenderer armRight1;
   public ModelRenderer spikeR;
   public ModelRenderer armRight2;
   public ModelRenderer armRight3;

   public OceanSpiritModel() {
      this.textureWidth = 64;
      this.textureHeight = 64;
      this.tent4 = new ModelRenderer(this, 28, 16);
      this.tent4.setRotationPoint(0.0F, 5.5F, 0.0F);
      this.tent4.addBox(-0.5F, 0.0F, -0.5F, 1, 6, 1, 0.0F);
      this.setRotateAngle(this.tent4, 0.4098033F, 0.0F, 0.0F);
      this.fin = new ModelRendererGlow(this, 48, 51, 220, false);
      this.fin.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.fin.addBox(0.0F, -2.0F, 3.5F, 0, 9, 4, 0.0F);
      this.spike1l = new ModelRenderer(this, 58, 0);
      this.spike1l.setRotationPoint(6.0F, -2.3F, 0.0F);
      this.spike1l.addBox(-0.5F, -8.0F, -0.5F, 1, 8, 1, 0.0F);
      this.setRotateAngle(this.spike1l, -0.3642502F, 0.0F, 1.1383038F);
      this.tent5 = new ModelRenderer(this, 32, 16);
      this.tent5.setRotationPoint(0.1F, 5.5F, 0.0F);
      this.tent5.addBox(-0.5F, 0.0F, -0.5F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.tent5, 0.4098033F, 0.0F, 0.0F);
      this.tail2 = new ModelRenderer(this, 13, 5);
      this.tail2.setRotationPoint(0.0F, 4.5F, 1.0F);
      this.tail2.addBox(-2.0F, 0.0F, -2.5F, 4, 6, 3, 0.0F);
      this.setRotateAngle(this.tail2, 0.13665928F, 0.0F, 0.0F);
      this.tent2 = new ModelRenderer(this, 0, 11);
      this.tent2.setRotationPoint(0.0F, 7.5F, 0.0F);
      this.tent2.addBox(-1.0F, 0.0F, -1.0F, 2, 8, 2, 0.0F);
      this.setRotateAngle(this.tent2, -0.31869712F, 0.0F, 0.0F);
      this.tail3 = new ModelRenderer(this, 30, 56);
      this.tail3.setRotationPoint(0.0F, 5.5F, 0.7F);
      this.tail3.addBox(-1.5F, 0.0F, -2.5F, 3, 6, 2, 0.0F);
      this.setRotateAngle(this.tail3, -0.31869712F, 0.0F, 0.0F);
      this.spike2l = new ModelRenderer(this, 58, 0);
      this.spike2l.setRotationPoint(8.0F, -2.3F, 0.0F);
      this.spike2l.addBox(-0.5F, -7.0F, -0.5F, 1, 7, 1, 0.0F);
      this.setRotateAngle(this.spike2l, -0.5462881F, 0.0F, 1.2292354F);
      this.armRight2 = new ModelRenderer(this, 0, 53);
      this.armRight2.setRotationPoint(0.0F, 6.0F, 0.0F);
      this.armRight2.addBox(-2.2F, 0.0F, -1.2F, 3, 8, 3, 0.0F);
      this.setRotateAngle(this.armRight2, -0.5462881F, 0.0F, 0.0F);
      this.seaweed = new ModelRenderer(this, 32, 2);
      this.seaweed.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.seaweed.addBox(-4.5F, 5.0F, -4.0F, 9, 6, 7, 0.0F);
      this.shape2l = new ModelRenderer(this, 39, 32);
      this.shape2l.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shape2l.addBox(6.5F, -3.0F, -5.2F, 2, 6, 10, 0.0F);
      this.setRotateAngle(this.shape2l, 0.27314404F, 0.0F, -0.18203785F);
      this.armLeft3 = new ModelRenderer(this, 22, 43);
      this.armLeft3.setRotationPoint(0.0F, 8.0F, 1.0F);
      this.armLeft3.addBox(-2.5F, -0.5F, -3.2F, 6, 6, 5, 0.0F);
      this.setRotateAngle(this.armLeft3, -0.3642502F, 0.0F, 0.0F);
      this.tent1 = new ModelRenderer(this, 0, 0);
      this.tent1.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.tent1.addBox(-1.5F, 0.0F, -1.5F, 3, 8, 3, 0.0F);
      this.setRotateAngle(this.tent1, -1.0927507F, 0.0F, 1.5934856F);
      this.tent3 = new ModelRenderer(this, 32, 2);
      this.tent3.setRotationPoint(0.1F, 7.5F, 0.0F);
      this.tent3.addBox(-1.0F, 0.0F, -0.4F, 2, 6, 1, 0.0F);
      this.setRotateAngle(this.tent3, -0.4098033F, 0.0F, 0.0F);
      this.spike1r = new ModelRenderer(this, 58, 0);
      this.spike1r.setRotationPoint(-6.0F, -2.3F, 0.0F);
      this.spike1r.addBox(-0.5F, -8.0F, -0.5F, 1, 8, 1, 0.0F);
      this.setRotateAngle(this.spike1r, -0.3642502F, 0.0F, -1.1383038F);
      this.armRight1 = new ModelRenderer(this, 24, 0);
      this.armRight1.setRotationPoint(-8.0F, 3.0F, 0.0F);
      this.armRight1.addBox(-1.5F, 0.0F, -1.5F, 2, 6, 2, 0.0F);
      this.setRotateAngle(this.armRight1, -0.5009095F, 0.0F, 0.0F);
      this.spikeL = new ModelRenderer(this, 58, 0);
      this.spikeL.setRotationPoint(10.0F, -2.3F, 0.0F);
      this.spikeL.addBox(-0.5F, -4.0F, -0.5F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.spikeL, -0.31869712F, 0.0F, 1.5025539F);
      this.body = new ModelRenderer(this, 28, 15);
      this.body.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.body.addBox(-5.0F, -3.0F, -4.5F, 10, 9, 8, 0.0F);
      this.head2 = new ModelRenderer(this, 4, 20);
      this.head2.setRotationPoint(0.0F, -4.0F, 0.0F);
      this.head2.addBox(-3.0F, -4.0F, -6.0F, 6, 5, 6, 0.0F);
      this.setRotateAngle(this.head2, -0.22759093F, 0.0F, 0.0F);
      this.head3 = new ModelRendererGlow(this, 10, 15, 240, false);
      this.head3.setRotationPoint(0.0F, -4.0F, -0.1F);
      this.head3.addBox(-3.0F, -4.0F, -6.0F, 6, 5, 0, 0.0F);
      this.setRotateAngle(this.head3, -0.22759093F, 0.0F, 0.0F);
      this.tail1 = new ModelRenderer(this, 12, 54);
      this.tail1.setRotationPoint(0.0F, -2.0F, 1.5F);
      this.tail1.addBox(-2.5F, -1.0F, -2.5F, 5, 6, 4, 0.0F);
      this.setRotateAngle(this.tail1, 0.091106184F, 0.0F, 0.0F);
      this.armLeft2 = new ModelRenderer(this, 0, 53);
      this.armLeft2.setRotationPoint(0.0F, 6.0F, 0.0F);
      this.armLeft2.addBox(-0.8F, 0.0F, -1.2F, 3, 8, 3, 0.0F);
      this.setRotateAngle(this.armLeft2, -0.95609134F, 0.0F, 0.0F);
      this.tantbase = new ModelRenderer(this, 56, 15);
      this.tantbase.setRotationPoint(0.0F, 18.0F, -0.5F);
      this.tantbase.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
      this.setRotateAngle(this.tantbase, 0.0F, 0.0F, (float) (-Math.PI / 2));
      this.shapearmLeft = new ModelRenderer(this, 15, 31);
      this.shapearmLeft.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shapearmLeft.addBox(6.5F, -3.0F, -3.2F, 4, 6, 5, 0.0F);
      this.setRotateAngle(this.shapearmLeft, 0.22759093F, 0.0F, 0.0F);
      this.tail4 = new ModelRenderer(this, 40, 56);
      this.tail4.setRotationPoint(0.0F, 5.5F, -0.5F);
      this.tail4.addBox(-1.0F, 0.0F, -2.0F, 2, 6, 2, 0.0F);
      this.setRotateAngle(this.tail4, -0.4098033F, 0.0F, 0.0F);
      this.spikeR = new ModelRenderer(this, 58, 0);
      this.spikeR.setRotationPoint(-10.0F, -2.3F, 0.0F);
      this.spikeR.addBox(-0.5F, -4.0F, -0.5F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.spikeR, -0.31869712F, 0.0F, -1.5025539F);
      this.shape1r = new ModelRenderer(this, 0, 33);
      this.shape1r.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shape1r.addBox(-7.1F, -3.0F, -5.2F, 3, 6, 9, 0.0F);
      this.setRotateAngle(this.shape1r, 0.3642502F, 0.0F, 0.4553564F);
      this.shape1l = new ModelRenderer(this, 0, 33);
      this.shape1l.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shape1l.addBox(4.1F, -3.0F, -5.2F, 3, 6, 9, 0.0F);
      this.setRotateAngle(this.shape1l, 0.3642502F, 0.0F, -0.4553564F);
      this.armLeft1 = new ModelRenderer(this, 24, 0);
      this.armLeft1.setRotationPoint(8.0F, 3.0F, 0.0F);
      this.armLeft1.addBox(-0.5F, 0.0F, -1.5F, 2, 6, 2, 0.0F);
      this.setRotateAngle(this.armLeft1, -0.5009095F, 0.0F, 0.0F);
      this.sphere = new ModelRendererGlow(this, 46, 48, 220, false);
      this.sphere.setRotationPoint(0.5F, 2.5F, -4.0F);
      this.sphere.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3, 0.0F);
      this.setRotateAngle(this.sphere, 0.7740535F, 0.7740535F, 0.95609134F);
      this.spike2r = new ModelRenderer(this, 58, 0);
      this.spike2r.setRotationPoint(-8.0F, -2.3F, 0.0F);
      this.spike2r.addBox(-0.5F, -7.0F, -0.5F, 1, 7, 1, 0.0F);
      this.setRotateAngle(this.spike2r, -0.5462881F, 0.0F, -1.2292354F);
      this.armRight3 = new ModelRenderer(this, 22, 43);
      this.armRight3.mirror = true;
      this.armRight3.setRotationPoint(0.0F, 8.0F, 1.0F);
      this.armRight3.addBox(-3.5F, -0.5F, -3.2F, 6, 6, 5, 0.0F);
      this.setRotateAngle(this.armRight3, -0.045553092F, -1.548107F, 0.0F);
      this.head1 = new ModelRenderer(this, 33, 32);
      this.head1.setRotationPoint(0.0F, -7.0F, -1.0F);
      this.head1.addBox(-2.0F, -6.0F, -2.0F, 4, 6, 4, 0.0F);
      this.setRotateAngle(this.head1, 0.3642502F, 0.0F, 0.0F);
      this.shape2r = new ModelRenderer(this, 39, 32);
      this.shape2r.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shape2r.addBox(-8.5F, -3.0F, -5.2F, 2, 6, 10, 0.0F);
      this.setRotateAngle(this.shape2r, 0.27314404F, 0.0F, 0.18203785F);
      this.shapearmRight = new ModelRenderer(this, 15, 31);
      this.shapearmRight.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.shapearmRight.addBox(-10.5F, -3.0F, -3.2F, 4, 6, 5, 0.0F);
      this.setRotateAngle(this.shapearmRight, 0.22759093F, 0.0F, 0.0F);
      this.tent3.addChild(this.tent4);
      this.shape1l.addChild(this.spike1l);
      this.tent4.addChild(this.tent5);
      this.tail1.addChild(this.tail2);
      this.tent1.addChild(this.tent2);
      this.tail2.addChild(this.tail3);
      this.shape2l.addChild(this.spike2l);
      this.armRight1.addChild(this.armRight2);
      this.body.addChild(this.seaweed);
      this.armLeft2.addChild(this.armLeft3);
      this.tantbase.addChild(this.tent1);
      this.tent2.addChild(this.tent3);
      this.shape1r.addChild(this.spike1r);
      this.shapearmRight.addChild(this.armRight1);
      this.shapearmLeft.addChild(this.spikeL);
      this.head1.addChild(this.head2);
      this.head1.addChild(this.head3);
      this.armLeft1.addChild(this.armLeft2);
      this.tail3.addChild(this.tail4);
      this.shapearmRight.addChild(this.spikeR);
      this.shapearmLeft.addChild(this.armLeft1);
      this.armLeft3.addChild(this.sphere);
      this.shape2r.addChild(this.spike2r);
      this.armRight2.addChild(this.armRight3);
   }

   @Override
   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5, int an1, int an2, int an3, int an4, boolean isAbstractMob) {
      this.head1.rotateAngleY = f3 * (float) (Math.PI / 180.0) / 2.0F;
      this.head2.rotateAngleY = f3 * (float) (Math.PI / 180.0) / 2.0F;
      this.head1.rotateAngleX = f4 * (float) (Math.PI / 180.0) / 2.0F + 0.3642502F;
      this.head2.rotateAngleX = f4 * (float) (Math.PI / 180.0) / 2.0F - 0.22759093F;
      this.head3.rotateAngleX = this.head2.rotateAngleX;
      this.head3.rotateAngleY = this.head2.rotateAngleY;
      this.sphere.rotateAngleZ = AnimationTimer.tick * 0.027453292F;
      float angArm1 = MathHelper.sin(AnimationTimer.tick / 45.0F) * 0.17F;
      float angArm2 = MathHelper.sin(-AnimationTimer.tick / 45.0F) * 0.07F;
      this.shapearmRight.rotateAngleX = 0.22759093F + angArm1;
      this.armRight1.rotateAngleX = -0.5009095F + angArm1 * 0.6F;
      this.armRight2.rotateAngleX = -0.5462881F + angArm1 * 0.4F;
      this.shapearmLeft.rotateAngleX = 0.22759093F + angArm2;
      this.armLeft1.rotateAngleX = -0.5009095F + angArm2 * 0.7F;
      this.armLeft2.rotateAngleX = -0.95609134F + angArm2 * 0.5F;
      this.armLeft3.rotateAngleX = -0.3642502F;
      this.armLeft1.rotateAngleY = 0.0F;
      this.armLeft1.rotateAngleZ = 0.0F;
      float pt = Minecraft.getMinecraft().getRenderPartialTicks();
      if (an3 != 0) {
         float an1progr = GetMOP.getfromto(100 - an3 + pt, 0.0F, 10.0F) - GetMOP.getfromto(100 - an3 + pt, 20.0F, 30.0F);
         this.shapearmLeft.rotateAngleX += (float) (-Math.PI * 2.0 / 9.0) * an1progr;
         this.armLeft1.rotateAngleY += (float) (Math.PI / 9) * an1progr;
         this.armLeft1.rotateAngleZ += (float) (Math.PI / 12) * an1progr;
         this.armLeft3.rotateAngleX += 0.88F * an1progr;
      }

      if (an1 != 0) {
         float an1progr = GetMOP.getfromto(100 - an1 + pt, 0.0F, 10.0F) - GetMOP.getfromto(100 - an1 + pt, 10.0F, 13.0F);
         this.shapearmRight.rotateAngleX += (float) (-Math.PI * 4.0 / 9.0) * an1progr;
         this.armLeft2.rotateAngleX += (float) (-Math.PI / 9) * an1progr;
      }

      this.tail1.render(f5);
      this.shape2l.render(f5);
      this.head1.render(f5);
      this.shape1l.render(f5);
      this.shape2r.render(f5);
      this.shape1r.render(f5);
      this.body.render(f5);
      this.shapearmLeft.render(f5);
      this.shapearmRight.render(f5);

      for (int i = 0; i < 8; i++) {
         float offset = MathHelper.sin(AnimationTimer.tick / 50.0F + i) * 0.2F;
         float offsetX1 = MathHelper.sin(-AnimationTimer.tick / 40.0F + i * 1.678F) * 0.15F - 0.1F;
         float offsetX2 = MathHelper.sin((-AnimationTimer.tick + 30) / 40.0F + i * 1.678F) * 0.16F - 0.11F;
         float offsetX3 = MathHelper.sin((-AnimationTimer.tick + 60) / 40.0F + i * 1.678F) * 0.17F - 0.12F;
         float offsetX4 = MathHelper.sin((-AnimationTimer.tick + 90) / 40.0F + i * 1.678F) * 0.18F - 0.13F;
         float offsetX5 = MathHelper.sin((-AnimationTimer.tick + 120) / 40.0F + i * 1.678F) * 0.19F - 0.14F;
         this.tent1.rotateAngleY = i * 45.0F * 0.017453F + offset;
         this.tent1.rotateAngleX = -1.0927507F + offsetX1;
         this.tent2.rotateAngleX = -0.31869712F + offsetX2;
         this.tent3.rotateAngleX = -0.4098033F + offsetX3;
         this.tent4.rotateAngleX = 0.4098033F + offsetX4;
         this.tent5.rotateAngleX = 0.4098033F + offsetX5;
         this.tantbase.render(f5);
      }

      GlStateManager.enableBlend();
      GlStateManager.blendFunc(SourceFactor.SRC_ALPHA, DestFactor.ONE_MINUS_SRC_ALPHA);
      this.fin.render(f5);
      GlStateManager.disableBlend();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
