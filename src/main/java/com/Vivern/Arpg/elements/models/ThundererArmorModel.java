//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.renders.ModelRendererGlow;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class ThundererArmorModel extends ModelBiped {
   public ModelRenderer chest;
   public ModelRenderer leftarm;
   public ModelRenderer rightarm;
   public ModelRenderer helm;
   public ModelRenderer leftleg;
   public ModelRenderer rightleg;
   public ModelRenderer rightboot;
   public ModelRenderer leftboot;
   public ModelRenderer belt;
   public ModelRenderer chestS1;
   public ModelRenderer chestS2;
   public ModelRenderer larmA;
   public ModelRenderer larmB;
   public ModelRenderer rarmA;
   public ModelRenderer rarmB;
   public ModelRenderer helm1;
   public ModelRenderer helm2;
   public ModelRenderer helm3;
   public ModelRenderer helm1_1;
   public ModelRenderer leftlKK;
   public ModelRenderer rightlKK;
   public ModelRenderer lbootK;
   public ModelRenderer lbootK_1;
   public ModelRenderer rightlegK;
   public ModelRenderer leftlegK;

   public ThundererArmorModel() {
      this.textureWidth = 64;
      this.textureHeight = 64;
      this.rightboot = new ModelRenderer(this, 40, 24);
      this.rightboot.mirror = true;
      this.rightboot.setRotationPoint(-1.9F, 12.0F, 0.0F);
      this.rightboot.addBox(-2.0F, 8.0F, -2.0F, 4, 4, 4, 0.4F);
      this.belt = new ModelRendererGlow(this, 0, 5, 80, true);
      this.belt.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.belt.addBox(-1.0F, 10.0F, -3.5F, 2, 2, 1, 0.0F);
      this.larmA = new ModelRenderer(this, 40, 0);
      this.larmA.setRotationPoint(0.2F, -1.2F, -1.0F);
      this.larmA.addBox(-1.0F, -2.0F, -2.0F, 6, 2, 6, 0.0F);
      this.setRotateAngle(this.larmA, 0.0F, 0.0F, 0.13665928F);
      this.lbootK = new ModelRenderer(this, 42, 32);
      this.lbootK.mirror = true;
      this.lbootK.setRotationPoint(-0.9F, 8.5F, -1.5F);
      this.lbootK.addBox(-2.0F, 0.0F, -2.0F, 4, 3, 5, 0.0F);
      this.setRotateAngle(this.lbootK, 0.31869712F, 0.0F, 0.0F);
      this.leftlKK = new ModelRenderer(this, 0, 45);
      this.leftlKK.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.leftlKK.addBox(-1.5F, 0.0F, -2.5F, 2, 5, 5, 0.0F);
      this.setRotateAngle(this.leftlKK, 0.0F, 0.0F, (float) (-Math.PI / 180.0));
      this.rarmB = new ModelRenderer(this, 40, 40);
      this.rarmB.mirror = true;
      this.rarmB.setRotationPoint(-1.7F, -0.2F, -0.5F);
      this.rarmB.addBox(-5.0F, -2.0F, -2.0F, 6, 2, 5, 0.0F);
      this.setRotateAngle(this.rarmB, 0.0F, 0.0F, -1.3203416F);
      this.chestS2 = new ModelRenderer(this, 25, 0);
      this.chestS2.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.chestS2.addBox(0.5F, -0.5F, -3.0F, 4, 4, 1, 0.0F);
      this.leftarm = new ModelRenderer(this, 40, 11);
      this.leftarm.setRotationPoint(5.0F, 2.0F, 0.0F);
      this.leftarm.addBox(-1.0F, -2.0F, -2.0F, 4, 9, 4, 0.4F);
      this.rarmA = new ModelRenderer(this, 40, 0);
      this.rarmA.mirror = true;
      this.rarmA.setRotationPoint(-0.2F, -1.2F, -1.0F);
      this.rarmA.addBox(-5.0F, -2.0F, -2.0F, 6, 2, 6, 0.0F);
      this.setRotateAngle(this.rarmA, 0.0F, 0.0F, -0.13665928F);
      this.rightlegK = new ModelRenderer(this, 0, 32);
      this.rightlegK.mirror = true;
      this.rightlegK.setRotationPoint(-2.0F, 10.0F, -3.0F);
      this.rightlegK.addBox(-2.7F, -1.0F, 0.0F, 4, 7, 6, 0.0F);
      this.setRotateAngle(this.rightlegK, 0.0F, 0.0F, 0.045553092F);
      this.helm3 = new ModelRendererGlow(this, 0, 0, 80, true);
      this.helm3.setRotationPoint(0.0F, -9.0F, -4.0F);
      this.helm3.addBox(-1.0F, -1.0F, -1.0F, 2, 2, 2, 0.0F);
      this.setRotateAngle(this.helm3, 0.0F, 0.0F, (float) (-Math.PI / 4));
      this.leftboot = new ModelRenderer(this, 40, 24);
      this.leftboot.setRotationPoint(1.9F, 12.0F, 0.0F);
      this.leftboot.addBox(-2.0F, 8.0F, -2.0F, 4, 4, 4, 0.4F);
      this.helm1_1 = new ModelRendererGlow(this, 20, 21, 80, true);
      this.helm1_1.setRotationPoint(0.0F, -5.0F, 0.0F);
      this.helm1_1.addBox(0.0F, -8.0F, -4.0F, 0, 9, 11, 0.0F);
      this.lbootK_1 = new ModelRenderer(this, 42, 32);
      this.lbootK_1.setRotationPoint(0.9F, 8.5F, -1.5F);
      this.lbootK_1.addBox(-2.0F, 0.0F, -2.0F, 4, 3, 5, 0.0F);
      this.setRotateAngle(this.lbootK_1, 0.31869712F, 0.0F, 0.0F);
      this.rightleg = new ModelRenderer(this, 0, 16);
      this.rightleg.mirror = true;
      this.rightleg.setRotationPoint(-1.9F, 12.0F, 0.0F);
      this.rightleg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, 0.2F);
      this.chest = new ModelRenderer(this, 16, 16);
      this.chest.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.chest.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, 0.5F);
      this.leftlegK = new ModelRenderer(this, 0, 32);
      this.leftlegK.setRotationPoint(2.0F, 10.0F, -3.0F);
      this.leftlegK.addBox(-1.3F, -1.0F, 0.0F, 4, 7, 6, 0.0F);
      this.setRotateAngle(this.leftlegK, 0.0F, 0.0F, -0.045553092F);
      this.rightlKK = new ModelRenderer(this, 0, 45);
      this.rightlKK.mirror = true;
      this.rightlKK.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.rightlKK.addBox(-0.5F, 0.0F, -2.5F, 2, 5, 5, 0.0F);
      this.setRotateAngle(this.rightlKK, 0.0F, 0.0F, (float) (Math.PI / 180.0));
      this.helm = new ModelRenderer(this, 0, 0);
      this.helm.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.helm.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, 0.2F);
      this.leftleg = new ModelRenderer(this, 0, 16);
      this.leftleg.setRotationPoint(1.9F, 12.0F, 0.0F);
      this.leftleg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, 0.2F);
      this.helm2 = new ModelRenderer(this, 20, 33);
      this.helm2.setRotationPoint(-4.2F, -5.0F, 0.0F);
      this.helm2.addBox(0.0F, -8.0F, -4.0F, 0, 8, 8, 0.0F);
      this.setRotateAngle(this.helm2, 0.0F, -0.18203785F, -0.18203785F);
      this.chestS1 = new ModelRenderer(this, 25, 0);
      this.chestS1.mirror = true;
      this.chestS1.setRotationPoint(0.0F, 0.0F, 0.0F);
      this.chestS1.addBox(-4.5F, -0.5F, -3.0F, 4, 4, 1, 0.0F);
      this.larmB = new ModelRenderer(this, 40, 40);
      this.larmB.setRotationPoint(1.7F, -0.2F, -0.5F);
      this.larmB.addBox(-1.0F, -2.0F, -2.0F, 6, 2, 5, 0.0F);
      this.setRotateAngle(this.larmB, 0.0F, 0.0F, 1.3203416F);
      this.rightarm = new ModelRenderer(this, 40, 11);
      this.rightarm.mirror = true;
      this.rightarm.setRotationPoint(-5.0F, 2.0F, 0.0F);
      this.rightarm.addBox(-3.0F, -2.0F, -2.0F, 4, 9, 4, 0.4F);
      this.helm1 = new ModelRenderer(this, 20, 33);
      this.helm1.setRotationPoint(4.2F, -5.1F, 0.0F);
      this.helm1.addBox(0.0F, -8.0F, -4.0F, 0, 8, 8, 0.0F);
      this.setRotateAngle(this.helm1, 0.0F, 0.18203785F, 0.18203785F);
      this.leftarm.addChild(this.larmA);
      this.rightboot.addChild(this.lbootK);
      this.leftleg.addChild(this.leftlKK);
      this.rightarm.addChild(this.rarmB);
      this.chest.addChild(this.chestS2);
      this.rightarm.addChild(this.rarmA);
      this.belt.addChild(this.rightlegK);
      this.helm.addChild(this.helm3);
      this.helm.addChild(this.helm1_1);
      this.leftboot.addChild(this.lbootK_1);
      this.belt.addChild(this.leftlegK);
      this.rightleg.addChild(this.rightlKK);
      this.helm.addChild(this.helm2);
      this.chest.addChild(this.chestS1);
      this.leftarm.addChild(this.larmB);
      this.helm.addChild(this.helm1);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      this.belt.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.chest.offsetX, this.chest.offsetY, this.chest.offsetZ);
      GlStateManager.translate(this.chest.rotationPointX * f5, this.chest.rotationPointY * f5, this.chest.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.0, 1.1);
      GlStateManager.translate(-this.chest.offsetX, -this.chest.offsetY, -this.chest.offsetZ);
      GlStateManager.translate(-this.chest.rotationPointX * f5, -this.chest.rotationPointY * f5, -this.chest.rotationPointZ * f5);
      this.chest.render(f5);
      GlStateManager.popMatrix();
      this.rightarm.render(f5);
      this.leftboot.render(f5);
      this.rightleg.render(f5);
      this.leftleg.render(f5);
      this.rightboot.render(f5);
      this.helm.render(f5);
      this.leftarm.render(f5);
   }

   public void setModelAttributes(ModelBase model) {
      super.setModelAttributes(model);
      if (model instanceof ModelBiped) {
         ModelBiped modelbiped = (ModelBiped)model;
         this.rightarm.rotateAngleX = modelbiped.bipedRightArm.rotateAngleX;
         this.rightarm.rotateAngleY = modelbiped.bipedRightArm.rotateAngleY;
         this.rightarm.rotateAngleZ = modelbiped.bipedRightArm.rotateAngleZ;
         this.leftarm.rotateAngleX = modelbiped.bipedLeftArm.rotateAngleX;
         this.leftarm.rotateAngleY = modelbiped.bipedLeftArm.rotateAngleY;
         this.leftarm.rotateAngleZ = modelbiped.bipedLeftArm.rotateAngleZ;
         this.helm.rotateAngleX = modelbiped.bipedHead.rotateAngleX;
         this.helm.rotateAngleY = modelbiped.bipedHead.rotateAngleY;
         this.helm.rotateAngleZ = modelbiped.bipedHead.rotateAngleZ;
         this.chest.rotateAngleX = modelbiped.bipedBody.rotateAngleX;
         this.chest.rotateAngleY = modelbiped.bipedBody.rotateAngleY;
         this.chest.rotateAngleZ = modelbiped.bipedBody.rotateAngleZ;
         this.rightleg.rotateAngleX = modelbiped.bipedRightLeg.rotateAngleX;
         this.rightleg.rotateAngleY = modelbiped.bipedRightLeg.rotateAngleY;
         this.rightleg.rotateAngleZ = modelbiped.bipedRightLeg.rotateAngleZ;
         this.leftleg.rotateAngleX = modelbiped.bipedLeftLeg.rotateAngleX;
         this.leftleg.rotateAngleY = modelbiped.bipedLeftLeg.rotateAngleY;
         this.leftleg.rotateAngleZ = modelbiped.bipedLeftLeg.rotateAngleZ;
         this.rightboot.rotateAngleX = modelbiped.bipedRightLeg.rotateAngleX;
         this.rightboot.rotateAngleY = modelbiped.bipedRightLeg.rotateAngleY;
         this.rightboot.rotateAngleZ = modelbiped.bipedRightLeg.rotateAngleZ;
         this.leftboot.rotateAngleX = modelbiped.bipedLeftLeg.rotateAngleX;
         this.leftboot.rotateAngleY = modelbiped.bipedLeftLeg.rotateAngleY;
         this.leftboot.rotateAngleZ = modelbiped.bipedLeftLeg.rotateAngleZ;
         this.rightarm.rotationPointX = modelbiped.bipedRightArm.rotationPointX;
         this.rightarm.rotationPointY = modelbiped.bipedRightArm.rotationPointY;
         this.rightarm.rotationPointZ = modelbiped.bipedRightArm.rotationPointZ;
         this.leftarm.rotationPointX = modelbiped.bipedLeftArm.rotationPointX;
         this.leftarm.rotationPointY = modelbiped.bipedLeftArm.rotationPointY;
         this.leftarm.rotationPointZ = modelbiped.bipedLeftArm.rotationPointZ;
         this.helm.rotationPointX = modelbiped.bipedHead.rotationPointX;
         this.helm.rotationPointY = modelbiped.bipedHead.rotationPointY;
         this.helm.rotationPointZ = modelbiped.bipedHead.rotationPointZ;
         this.chest.rotationPointX = modelbiped.bipedBody.rotationPointX;
         this.chest.rotationPointY = modelbiped.bipedBody.rotationPointY;
         this.chest.rotationPointZ = modelbiped.bipedBody.rotationPointZ;
         this.rightleg.rotationPointX = modelbiped.bipedRightLeg.rotationPointX;
         this.rightleg.rotationPointY = modelbiped.bipedRightLeg.rotationPointY;
         this.rightleg.rotationPointZ = modelbiped.bipedRightLeg.rotationPointZ;
         this.leftleg.rotationPointX = modelbiped.bipedLeftLeg.rotationPointX;
         this.leftleg.rotationPointY = modelbiped.bipedLeftLeg.rotationPointY;
         this.leftleg.rotationPointZ = modelbiped.bipedLeftLeg.rotationPointZ;
         this.rightboot.rotationPointX = modelbiped.bipedRightLeg.rotationPointX;
         this.rightboot.rotationPointY = modelbiped.bipedRightLeg.rotationPointY;
         this.rightboot.rotationPointZ = modelbiped.bipedRightLeg.rotationPointZ;
         this.leftboot.rotationPointX = modelbiped.bipedLeftLeg.rotationPointX;
         this.leftboot.rotationPointY = modelbiped.bipedLeftLeg.rotationPointY;
         this.leftboot.rotationPointZ = modelbiped.bipedLeftLeg.rotationPointZ;
         this.rightlegK.rotateAngleX = this.rightleg.rotateAngleX * 0.5F;
         this.leftlegK.rotateAngleX = this.leftleg.rotateAngleX * 0.5F;
      }
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
