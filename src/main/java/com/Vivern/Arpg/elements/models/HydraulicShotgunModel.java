//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.main.GetMOP;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class HydraulicShotgunModel extends ModelBase {
   public ModelRenderer shape1;
   public ModelRenderer shapess1;
   public ModelRenderer shape2;
   public ModelRenderer shape3;
   public ModelRenderer tank1;
   public ModelRenderer tankshape1;
   public ModelRenderer shape4;
   public ModelRenderer flat1;
   public ModelRenderer shape5;
   public ModelRenderer shape6;
   public ModelRenderer hydraulic1;
   public ModelRenderer flat2;
   public ModelRenderer shapess2;
   public ModelRenderer sammo1;
   public ModelRenderer sammo2;
   public ModelRenderer ammo1;
   public ModelRenderer flat3;
   public ModelRenderer tank2;
   public ModelRenderer tankshape2;
   public ModelRenderer hydraulic2;
   public ModelRenderer flat4;
   public ModelRenderer flat5;
   public ModelRenderer flat6;
   public ModelRenderer water1;
   public ModelRenderer water2;
   public ModelRenderer piston1;
   public ModelRenderer ammo2;
   public ModelRenderer piston2;

   public HydraulicShotgunModel() {
      this.textureWidth = 64;
      this.textureHeight = 32;
      this.tankshape2 = new ModelRenderer(this, 40, 0);
      this.tankshape2.setRotationPoint(-1.5F, 1.0F, -15.5F);
      this.tankshape2.addBox(-2.0F, 0.0F, 0.0F, 2, 2, 4, 0.0F);
      this.shape6 = new ModelRenderer(this, 14, 0);
      this.shape6.setRotationPoint(0.0F, 2.0F, -1.4F);
      this.shape6.addBox(-0.5F, 0.0F, 0.0F, 1, 1, 2, 0.0F);
      this.tank2 = new ModelRenderer(this, 20, 10);
      this.tank2.mirror = true;
      this.tank2.setRotationPoint(-2.0F, 0.5F, -11.5F);
      this.tank2.addBox(-2.0F, 0.0F, 0.0F, 3, 3, 10, 0.0F);
      this.shape2 = new ModelRenderer(this, 0, 16);
      this.shape2.setRotationPoint(0.0F, 1.5F, -0.5F);
      this.shape2.addBox(-2.0F, -3.0F, -11.0F, 4, 4, 12, 0.0F);
      this.flat5 = new ModelRenderer(this, 20, -10);
      this.flat5.setRotationPoint(4.0F, 3.5F, -9.5F);
      this.flat5.addBox(0.0F, 0.0F, 0.0F, 0, 4, 10, 0.0F);
      this.setRotateAngle(this.flat5, 0.0F, 0.0F, (float) (-Math.PI / 4));
      this.flat3 = new ModelRenderer(this, 0, 19);
      this.flat3.setRotationPoint(0.0F, 1.0F, -17.5F);
      this.flat3.addBox(0.0F, 0.0F, 0.0F, 0, 3, 6, 0.0F);
      this.tankshape1 = new ModelRenderer(this, 40, 0);
      this.tankshape1.setRotationPoint(1.5F, 1.0F, -15.5F);
      this.tankshape1.addBox(0.0F, 0.0F, 0.0F, 2, 2, 4, 0.0F);
      this.shape3 = new ModelRenderer(this, 40, 8);
      this.shape3.setRotationPoint(0.0F, -1.5F, 0.5F);
      this.shape3.addBox(-1.5F, 0.0F, 0.0F, 3, 2, 3, 0.0F);
      this.shape4 = new ModelRenderer(this, 44, 5);
      this.shape4.setRotationPoint(0.0F, 2.5F, 4.6F);
      this.shape4.addBox(-1.0F, 0.0F, 0.0F, 2, 1, 8, 0.0F);
      this.tank1 = new ModelRenderer(this, 20, 10);
      this.tank1.setRotationPoint(2.0F, 0.5F, -11.5F);
      this.tank1.addBox(-1.0F, 0.0F, 0.0F, 3, 3, 10, 0.0F);
      this.piston1 = new ModelRenderer(this, 0, 8);
      this.piston1.setRotationPoint(0.0F, 0.0F, 8.0F);
      this.piston1.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 1, 0.0F);
      this.hydraulic2 = new ModelRenderer(this, 0, 5);
      this.hydraulic2.setRotationPoint(-2.5F, 2.0F, -15.49F);
      this.hydraulic2.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 8, 0.0F);
      this.piston2 = new ModelRenderer(this, 0, 8);
      this.piston2.setRotationPoint(0.0F, 0.0F, 8.0F);
      this.piston2.addBox(-1.5F, -1.5F, 0.0F, 3, 3, 1, 0.0F);
      this.shapess2 = new ModelRenderer(this, 12, 7);
      this.shapess2.setRotationPoint(0.0F, 5.0F, -10.5F);
      this.shapess2.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 7, 0.0F);
      this.setRotateAngle(this.shapess2, 0.091106184F, 0.0F, 0.0F);
      this.flat1 = new ModelRenderer(this, 20, 12);
      this.flat1.setRotationPoint(0.0F, -1.5F, 0.6F);
      this.flat1.addBox(0.0F, 0.0F, 0.0F, 0, 5, 11, 0.0F);
      this.sammo2 = new ModelRenderer(this, 0, 14);
      this.sammo2.setRotationPoint(0.0F, -3.5F, -8.5F);
      this.sammo2.addBox(-1.0F, 0.0F, 0.0F, 2, 3, 2, 0.0F);
      this.setRotateAngle(this.sammo2, (float) (-Math.PI / 4), 0.0F, 0.0F);
      this.ammo1 = new ModelRenderer(this, 34, 18);
      this.ammo1.setRotationPoint(0.0F, -3.0F, -4.5F);
      this.ammo1.addBox(-0.5F, 0.0F, 0.0F, 1, 2, 12, 0.01F);
      this.hydraulic1 = new ModelRenderer(this, 0, 5);
      this.hydraulic1.setRotationPoint(2.5F, 2.0F, -15.49F);
      this.hydraulic1.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 8, 0.0F);
      this.water1 = new ModelRenderer(this, 29, 5);
      this.water1.setRotationPoint(2.5F, 2.0F, -1.6F);
      this.water1.addBox(-1.5F, -1.5F, -1.0F, 3, 3, 1, 0.0F);
      this.water2 = new ModelRenderer(this, 29, 5);
      this.water2.setRotationPoint(-2.5F, 2.0F, -1.6F);
      this.water2.addBox(-1.5F, -1.5F, -1.0F, 3, 3, 1, 0.0F);
      this.sammo1 = new ModelRenderer(this, 48, 22);
      this.sammo1.setRotationPoint(0.0F, -3.5F, -8.5F);
      this.sammo1.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 6, 0.0F);
      this.ammo2 = new ModelRenderer(this, 7, 0);
      this.ammo2.setRotationPoint(0.0F, 0.0F, 12.0F);
      this.ammo2.addBox(-0.5F, 0.0F, -2.0F, 1, 2, 2, 0.0F);
      this.setRotateAngle(this.ammo2, (float) (Math.PI / 4), 0.0F, 0.0F);
      this.shapess1 = new ModelRenderer(this, 10, 6);
      this.shapess1.setRotationPoint(0.0F, -1.5F, 3.5F);
      this.shapess1.addBox(-1.0F, 0.0F, -2.0F, 2, 5, 2, 0.0F);
      this.setRotateAngle(this.shapess1, 0.59184116F, 0.0F, 0.0F);
      this.shape1 = new ModelRenderer(this, 48, 14);
      this.shape1.setRotationPoint(0.0F, 2.0F, -6.5F);
      this.shape1.addBox(-1.0F, -3.0F, -11.0F, 2, 2, 6, 0.0F);
      this.flat4 = new ModelRenderer(this, 0, 19);
      this.flat4.setRotationPoint(0.0F, -1.0F, -17.5F);
      this.flat4.addBox(0.0F, 0.0F, 0.0F, 0, 3, 6, 0.0F);
      this.setRotateAngle(this.flat4, 0.0F, 0.0F, (float) Math.PI);
      this.flat6 = new ModelRenderer(this, 20, -10);
      this.flat6.setRotationPoint(-4.0F, 3.5F, -9.5F);
      this.flat6.addBox(0.0F, 0.0F, 0.0F, 0, 4, 10, 0.0F);
      this.setRotateAngle(this.flat6, 0.0F, 0.0F, (float) (Math.PI / 4));
      this.flat2 = new ModelRenderer(this, 50, -7);
      this.flat2.setRotationPoint(0.0F, 2.5F, -10.5F);
      this.flat2.addBox(0.0F, 0.0F, 0.0F, 0, 3, 7, 0.0F);
      this.shape5 = new ModelRenderer(this, 0, 0);
      this.shape5.setRotationPoint(0.0F, -1.5F, 11.6F);
      this.shape5.addBox(-1.0F, 0.0F, 0.0F, 2, 4, 1, 0.0F);
      this.hydraulic1.addChild(this.piston1);
      this.hydraulic2.addChild(this.piston2);
      this.ammo1.addChild(this.ammo2);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      float ft1 = GetMOP.getfromto(f2, 0.085F, 0.185F);
      float ft2 = GetMOP.getfromto(f2, 0.15F, 0.2F);
      float ft3 = GetMOP.getfromto(f2, 0.2F, 0.4F);
      float ft4 = GetMOP.getfromto(f2, 0.4F, 0.5F);
      float ft5 = GetMOP.getfromto(f2, 0.5F, 0.6F);
      float ft5_6 = GetMOP.getfromto(f2, 0.5F, 0.7F);
      float ft6 = GetMOP.getfromto(f2, 0.6F, 0.7F);
      float ft7 = GetMOP.getfromto(f2, 0.7F, 0.8F);
      this.ammo1.offsetX = 10.0F * ft3 - 5.0F * ft4 - 5.0F * ft5_6;
      this.ammo1.offsetY = -2.0F * ft2 + 5.0F * ft3 + 5.0F * ft4 - 9.0F * ft5 + 1.0F * ft6;
      this.ammo1.offsetZ = 2.0F * ft1 + 1.0F * ft4 - 3.0F * ft7;
      this.ammo1.rotateAngleX = -0.71F * ft3 + 0.93F * ft5 - 0.22F * ft6;
      this.ammo1.rotateAngleY = 0.71F * ft3 - 0.71F * ft4;
      this.ammo1.isHidden = f2 > 0.4F && f2 < 0.5F;
      GlStateManager.disableCull();
      GlStateManager.enableBlend();
      boolean hide = f1 == 1.0F;
      this.flat1.isHidden = hide;
      this.flat2.isHidden = hide;
      this.flat3.isHidden = hide;
      this.flat4.isHidden = hide;
      this.flat5.isHidden = hide;
      this.flat6.isHidden = hide;
      this.water1.isHidden = hide;
      this.water2.isHidden = hide;
      float hyd = 0.55F + 0.5F * f;
      float wat = 9.0F - 8.5F * f;
      this.hydraulic1.offsetZ = 4.0F * f;
      this.hydraulic2.offsetZ = this.hydraulic1.offsetZ;
      this.shape6.render(f5);
      this.shape2.render(f5);
      this.flat5.render(f5);
      this.flat3.render(f5);
      this.shape3.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shape4.offsetX, this.shape4.offsetY, this.shape4.offsetZ);
      GlStateManager.translate(this.shape4.rotationPointX * f5, this.shape4.rotationPointY * f5, this.shape4.rotationPointZ * f5);
      GlStateManager.scale(1.0, 1.2, 1.0);
      GlStateManager.translate(-this.shape4.offsetX, -this.shape4.offsetY, -this.shape4.offsetZ);
      GlStateManager.translate(-this.shape4.rotationPointX * f5, -this.shape4.rotationPointY * f5, -this.shape4.rotationPointZ * f5);
      this.shape4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.hydraulic2.offsetX, this.hydraulic2.offsetY, this.hydraulic2.offsetZ);
      GlStateManager.translate(this.hydraulic2.rotationPointX * f5, this.hydraulic2.rotationPointY * f5, this.hydraulic2.rotationPointZ * f5);
      GlStateManager.scale(0.9, 0.9, hyd);
      GlStateManager.translate(-this.hydraulic2.offsetX, -this.hydraulic2.offsetY, -this.hydraulic2.offsetZ);
      GlStateManager.translate(-this.hydraulic2.rotationPointX * f5, -this.hydraulic2.rotationPointY * f5, -this.hydraulic2.rotationPointZ * f5);
      this.hydraulic2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess2.offsetX, this.shapess2.offsetY, this.shapess2.offsetZ);
      GlStateManager.translate(this.shapess2.rotationPointX * f5, this.shapess2.rotationPointY * f5, this.shapess2.rotationPointZ * f5);
      GlStateManager.scale(1.0, 0.9, 1.0);
      GlStateManager.translate(-this.shapess2.offsetX, -this.shapess2.offsetY, -this.shapess2.offsetZ);
      GlStateManager.translate(-this.shapess2.rotationPointX * f5, -this.shapess2.rotationPointY * f5, -this.shapess2.rotationPointZ * f5);
      this.shapess2.render(f5);
      GlStateManager.popMatrix();
      this.flat1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.sammo2.offsetX, this.sammo2.offsetY, this.sammo2.offsetZ);
      GlStateManager.translate(this.sammo2.rotationPointX * f5, this.sammo2.rotationPointY * f5, this.sammo2.rotationPointZ * f5);
      GlStateManager.scale(0.99, 1.0, 1.0);
      GlStateManager.translate(-this.sammo2.offsetX, -this.sammo2.offsetY, -this.sammo2.offsetZ);
      GlStateManager.translate(-this.sammo2.rotationPointX * f5, -this.sammo2.rotationPointY * f5, -this.sammo2.rotationPointZ * f5);
      this.sammo2.render(f5);
      GlStateManager.popMatrix();
      this.ammo1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.hydraulic1.offsetX, this.hydraulic1.offsetY, this.hydraulic1.offsetZ);
      GlStateManager.translate(this.hydraulic1.rotationPointX * f5, this.hydraulic1.rotationPointY * f5, this.hydraulic1.rotationPointZ * f5);
      GlStateManager.scale(0.9, 0.9, hyd);
      GlStateManager.translate(-this.hydraulic1.offsetX, -this.hydraulic1.offsetY, -this.hydraulic1.offsetZ);
      GlStateManager.translate(-this.hydraulic1.rotationPointX * f5, -this.hydraulic1.rotationPointY * f5, -this.hydraulic1.rotationPointZ * f5);
      this.hydraulic1.render(f5);
      GlStateManager.popMatrix();
      this.sammo1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess1.offsetX, this.shapess1.offsetY, this.shapess1.offsetZ);
      GlStateManager.translate(this.shapess1.rotationPointX * f5, this.shapess1.rotationPointY * f5, this.shapess1.rotationPointZ * f5);
      GlStateManager.scale(1.01, 1.0, 1.0);
      GlStateManager.translate(-this.shapess1.offsetX, -this.shapess1.offsetY, -this.shapess1.offsetZ);
      GlStateManager.translate(-this.shapess1.rotationPointX * f5, -this.shapess1.rotationPointY * f5, -this.shapess1.rotationPointZ * f5);
      this.shapess1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.water1.offsetX, this.water1.offsetY, this.water1.offsetZ);
      GlStateManager.translate(this.water1.rotationPointX * f5, this.water1.rotationPointY * f5, this.water1.rotationPointZ * f5);
      GlStateManager.scale(0.93, 0.93, wat);
      GlStateManager.translate(-this.water1.offsetX, -this.water1.offsetY, -this.water1.offsetZ);
      GlStateManager.translate(-this.water1.rotationPointX * f5, -this.water1.rotationPointY * f5, -this.water1.rotationPointZ * f5);
      this.water1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.water2.offsetX, this.water2.offsetY, this.water2.offsetZ);
      GlStateManager.translate(this.water2.rotationPointX * f5, this.water2.rotationPointY * f5, this.water2.rotationPointZ * f5);
      GlStateManager.scale(0.93, 0.93, wat);
      GlStateManager.translate(-this.water2.offsetX, -this.water2.offsetY, -this.water2.offsetZ);
      GlStateManager.translate(-this.water2.rotationPointX * f5, -this.water2.rotationPointY * f5, -this.water2.rotationPointZ * f5);
      this.water2.render(f5);
      GlStateManager.popMatrix();
      this.shape1.render(f5);
      this.flat4.render(f5);
      this.flat6.render(f5);
      this.flat2.render(f5);
      this.shape5.render(f5);
      this.tank1.render(f5);
      this.tank2.render(f5);
      this.tankshape1.render(f5);
      this.tankshape2.render(f5);
      GlStateManager.disableBlend();
      GlStateManager.enableCull();
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
