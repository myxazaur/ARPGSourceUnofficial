//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\stuff\asbtractrpg\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

package com.Vivern.Arpg.elements.models;

import com.Vivern.Arpg.main.AnimationTimer;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class EnderProtectorModel extends ModelBase {
   public ModelRenderer shapess1;
   public ModelRenderer shape2;
   public ModelRenderer shape2_1;
   public ModelRenderer shape2_2;
   public ModelRenderer colb;
   public ModelRenderer crystal;
   public ModelRenderer core;
   public ModelRenderer crystal_1;
   public ModelRenderer crystal_2;
   public ModelRenderer crystal_3;
   public ModelRenderer crystal_4;
   public ModelRenderer crystal_5;
   public ModelRenderer colb2;
   public ModelRenderer crystalshape1;
   public ModelRenderer crystalshape2;
   public ModelRenderer portal1;
   public ModelRenderer portal2;
   public ModelRenderer portal3;
   public ModelRenderer portal4;

   public EnderProtectorModel() {
      this.textureWidth = 48;
      this.textureHeight = 32;
      this.crystalshape1 = new ModelRenderer(this, 24, 25);
      this.crystalshape1.setRotationPoint(0.0F, 0.5F, 9.0F);
      this.crystalshape1.addBox(2.0F, -0.75F, -2.0F, 1, 1, 6, 0.0F);
      this.core = new ModelRenderer(this, 0, 0);
      this.core.setRotationPoint(0.0F, 0.25F, -9.5F);
      this.core.addBox(-0.5F, 0.0F, -0.5F, 1, 4, 1, 0.0F);
      this.setRotateAngle(this.core, (float) (Math.PI / 2), 0.0F, 0.0F);
      this.crystal_2 = new ModelRenderer(this, 0, 0);
      this.crystal_2.setRotationPoint(0.2F, 0.6F, -8.2F);
      this.crystal_2.addBox(-0.5F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.crystal_2, (float) (-Math.PI / 3), -1.6845918F, 1.9577358F);
      this.shape2 = new ModelRenderer(this, 4, 0);
      this.shape2.setRotationPoint(-2.0F, -1.5F, 1.0F);
      this.shape2.addBox(0.0F, -0.25F, 0.0F, 4, 4, 12, 0.0F);
      this.crystalshape2 = new ModelRenderer(this, 24, 25);
      this.crystalshape2.setRotationPoint(0.0F, 0.5F, 9.0F);
      this.crystalshape2.addBox(-3.0F, -0.75F, -2.0F, 1, 1, 6, 0.0F);
      this.portal2 = new ModelRenderer(this, 35, 6);
      this.portal2.setRotationPoint(0.0F, 0.25F, -5.4F);
      this.portal2.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 0, 0.0F);
      this.setRotateAngle(this.portal2, 0.13665928F, 0.0F, 2.5953045F);
      this.colb = new ModelRenderer(this, 0, 20);
      this.colb.setRotationPoint(0.0F, 0.25F, -4.0F);
      this.colb.addBox(-3.0F, -3.0F, -3.0F, 6, 6, 6, 0.0F);
      this.shape2_2 = new ModelRenderer(this, 2, 3);
      this.shape2_2.setRotationPoint(-2.0F, -1.5F, -6.0F);
      this.shape2_2.addBox(-0.5F, -0.75F, -2.0F, 5, 5, 2, 0.0F);
      this.crystal_5 = new ModelRenderer(this, 0, 0);
      this.crystal_5.setRotationPoint(0.0F, 0.5F, -9.0F);
      this.crystal_5.addBox(-0.5F, 0.0F, -0.5F, 1, 2, 1, 0.0F);
      this.setRotateAngle(this.crystal_5, -1.3658947F, -1.0016445F, 1.548107F);
      this.portal4 = new ModelRenderer(this, 35, 22);
      this.portal4.setRotationPoint(0.0F, 0.25F, -4.4F);
      this.portal4.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 0, 0.0F);
      this.shape2_1 = new ModelRenderer(this, 2, 3);
      this.shape2_1.setRotationPoint(-2.0F, -1.5F, 1.0F);
      this.shape2_1.addBox(-0.5F, -0.75F, -2.0F, 5, 5, 2, 0.0F);
      this.shapess1 = new ModelRenderer(this, 24, 0);
      this.shapess1.setRotationPoint(0.0F, 1.0F, 4.0F);
      this.shapess1.addBox(-1.0F, 0.5F, -1.0F, 2, 6, 2, 0.0F);
      this.setRotateAngle(this.shapess1, 0.18203785F, 0.0F, 0.0F);
      this.crystal_3 = new ModelRenderer(this, 0, 0);
      this.crystal_3.setRotationPoint(0.0F, 0.1F, -8.7F);
      this.crystal_3.addBox(-0.5F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.crystal_3, -2.5497515F, 0.22759093F, (float) (Math.PI / 3));
      this.portal1 = new ModelRenderer(this, 35, 0);
      this.portal1.setRotationPoint(0.0F, 0.25F, -5.9F);
      this.portal1.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 0, 0.0F);
      this.crystal_4 = new ModelRenderer(this, 0, 0);
      this.crystal_4.setRotationPoint(0.2F, 0.1F, -9.3F);
      this.crystal_4.addBox(-0.5F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.crystal_4, -0.31869712F, 0.3642502F, 2.003289F);
      this.colb2 = new ModelRenderer(this, 18, 16);
      this.colb2.setRotationPoint(-1.5F, -1.0F, -9.0F);
      this.colb2.addBox(-0.5F, -0.75F, -2.0F, 4, 4, 3, 0.0F);
      this.crystal_1 = new ModelRenderer(this, 0, 0);
      this.crystal_1.setRotationPoint(-0.2F, 0.3F, -8.7F);
      this.crystal_1.addBox(-0.5F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.crystal_1, 3.0504866F, -2.1855013F, 2.003289F);
      this.crystal = new ModelRenderer(this, 0, 0);
      this.crystal.setRotationPoint(0.0F, 0.3F, -8.1F);
      this.crystal.addBox(-0.5F, 0.0F, 0.0F, 1, 3, 1, 0.0F);
      this.setRotateAngle(this.crystal, -2.8684487F, 0.31869712F, -0.13665928F);
      this.portal3 = new ModelRenderer(this, 35, 16);
      this.portal3.setRotationPoint(0.0F, 0.25F, -4.7F);
      this.portal3.addBox(-3.0F, -3.0F, 0.0F, 6, 6, 0, 0.0F);
      this.setRotateAngle(this.portal3, 0.045553092F, 0.0F, 0.0F);
   }

   public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
      this.core.render(f5);
      this.shape2.render(f5);
      this.shape2_2.render(f5);
      this.shape2_1.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.shapess1.offsetX, this.shapess1.offsetY, this.shapess1.offsetZ);
      GlStateManager.translate(this.shapess1.rotationPointX * f5, this.shapess1.rotationPointY * f5, this.shapess1.rotationPointZ * f5);
      GlStateManager.scale(1.1, 1.0, 1.2);
      GlStateManager.translate(-this.shapess1.offsetX, -this.shapess1.offsetY, -this.shapess1.offsetZ);
      GlStateManager.translate(-this.shapess1.rotationPointX * f5, -this.shapess1.rotationPointY * f5, -this.shapess1.rotationPointZ * f5);
      this.shapess1.render(f5);
      GlStateManager.popMatrix();
      AbstractMobModel.light(200, false);
      this.crystalshape1.render(f5);
      this.crystalshape2.render(f5);
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal_2.offsetX, this.crystal_2.offsetY, this.crystal_2.offsetZ);
      GlStateManager.translate(this.crystal_2.rotationPointX * f5, this.crystal_2.rotationPointY * f5, this.crystal_2.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal_2.offsetX, -this.crystal_2.offsetY, -this.crystal_2.offsetZ);
      GlStateManager.translate(-this.crystal_2.rotationPointX * f5, -this.crystal_2.rotationPointY * f5, -this.crystal_2.rotationPointZ * f5);
      this.crystal_2.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal_5.offsetX, this.crystal_5.offsetY, this.crystal_5.offsetZ);
      GlStateManager.translate(this.crystal_5.rotationPointX * f5, this.crystal_5.rotationPointY * f5, this.crystal_5.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal_5.offsetX, -this.crystal_5.offsetY, -this.crystal_5.offsetZ);
      GlStateManager.translate(-this.crystal_5.rotationPointX * f5, -this.crystal_5.rotationPointY * f5, -this.crystal_5.rotationPointZ * f5);
      this.crystal_5.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal_3.offsetX, this.crystal_3.offsetY, this.crystal_3.offsetZ);
      GlStateManager.translate(this.crystal_3.rotationPointX * f5, this.crystal_3.rotationPointY * f5, this.crystal_3.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal_3.offsetX, -this.crystal_3.offsetY, -this.crystal_3.offsetZ);
      GlStateManager.translate(-this.crystal_3.rotationPointX * f5, -this.crystal_3.rotationPointY * f5, -this.crystal_3.rotationPointZ * f5);
      this.crystal_3.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal_4.offsetX, this.crystal_4.offsetY, this.crystal_4.offsetZ);
      GlStateManager.translate(this.crystal_4.rotationPointX * f5, this.crystal_4.rotationPointY * f5, this.crystal_4.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal_4.offsetX, -this.crystal_4.offsetY, -this.crystal_4.offsetZ);
      GlStateManager.translate(-this.crystal_4.rotationPointX * f5, -this.crystal_4.rotationPointY * f5, -this.crystal_4.rotationPointZ * f5);
      this.crystal_4.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal_1.offsetX, this.crystal_1.offsetY, this.crystal_1.offsetZ);
      GlStateManager.translate(this.crystal_1.rotationPointX * f5, this.crystal_1.rotationPointY * f5, this.crystal_1.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal_1.offsetX, -this.crystal_1.offsetY, -this.crystal_1.offsetZ);
      GlStateManager.translate(-this.crystal_1.rotationPointX * f5, -this.crystal_1.rotationPointY * f5, -this.crystal_1.rotationPointZ * f5);
      this.crystal_1.render(f5);
      GlStateManager.popMatrix();
      GlStateManager.pushMatrix();
      GlStateManager.translate(this.crystal.offsetX, this.crystal.offsetY, this.crystal.offsetZ);
      GlStateManager.translate(this.crystal.rotationPointX * f5, this.crystal.rotationPointY * f5, this.crystal.rotationPointZ * f5);
      GlStateManager.scale(0.7, 0.7, 0.7);
      GlStateManager.translate(-this.crystal.offsetX, -this.crystal.offsetY, -this.crystal.offsetZ);
      GlStateManager.translate(-this.crystal.rotationPointX * f5, -this.crystal.rotationPointY * f5, -this.crystal.rotationPointZ * f5);
      this.crystal.render(f5);
      GlStateManager.popMatrix();
      if (f == 1.0F) {
         AbstractMobModel.returnlight();
         GlStateManager.pushMatrix();
         GlStateManager.translate(this.colb.offsetX, this.colb.offsetY, this.colb.offsetZ);
         GlStateManager.translate(this.colb.rotationPointX * f5, this.colb.rotationPointY * f5, this.colb.rotationPointZ * f5);
         GlStateManager.scale(1.07, 1.07, 1.07);
         GlStateManager.translate(-this.colb.offsetX, -this.colb.offsetY, -this.colb.offsetZ);
         GlStateManager.translate(-this.colb.rotationPointX * f5, -this.colb.rotationPointY * f5, -this.colb.rotationPointZ * f5);
         this.colb.render(f5);
         GlStateManager.popMatrix();
         this.colb2.render(f5);
      } else {
         AbstractMobModel.alphaGlow();
         GlStateManager.disableCull();
         this.portal1.rotateAngleZ = AnimationTimer.tick * 0.0174F;
         this.portal2.rotateAngleZ = AnimationTimer.tick * -3 * 0.0174F;
         this.portal3.rotateAngleZ = AnimationTimer.tick * 2 * 0.0174F;
         this.portal4.rotateAngleZ = AnimationTimer.tick * -4 * 0.0174F;
         this.portal1.render(f5);
         this.portal2.render(f5);
         this.portal3.render(f5);
         this.portal4.render(f5);
         AbstractMobModel.returnlight();
         AbstractMobModel.alphaGlowDisable();
         GlStateManager.pushMatrix();
         GlStateManager.translate(this.colb.offsetX, this.colb.offsetY, this.colb.offsetZ);
         GlStateManager.translate(this.colb.rotationPointX * f5, this.colb.rotationPointY * f5, this.colb.rotationPointZ * f5);
         GlStateManager.scale(1.07, 1.07, 1.07);
         GlStateManager.translate(-this.colb.offsetX, -this.colb.offsetY, -this.colb.offsetZ);
         GlStateManager.translate(-this.colb.rotationPointX * f5, -this.colb.rotationPointY * f5, -this.colb.rotationPointZ * f5);
         this.colb.render(f5);
         GlStateManager.popMatrix();
         this.colb2.render(f5);
         GlStateManager.enableCull();
      }
   }

   public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
      modelRenderer.rotateAngleX = x;
      modelRenderer.rotateAngleY = y;
      modelRenderer.rotateAngleZ = z;
   }
}
